/*!
 * speedy-vision.js v0.3.0
 * https://github.com/alemart/speedy-vision-js
 * 
 * GPU-accelerated Computer Vision for the web
 * Copyright 2020 Alexandre Martins <alemartf(at)gmail.com> (https://github.com/alemart)
 * @license Apache-2.0
 * 
 * Date: 2020-07-09T01:50:28.183Z
 */
var Speedy=function(e){var n={};function t(i){if(n[i])return n[i].exports;var c=n[i]={i:i,l:!1,exports:{}};return e[i].call(c.exports,c,c.exports,t),c.l=!0,c.exports}return t.m=e,t.c=n,t.d=function(e,n,i){t.o(e,n)||Object.defineProperty(e,n,{enumerable:!0,get:i})},t.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},t.t=function(e,n){if(1&n&&(e=t(e)),8&n)return e;if(4&n&&"object"==typeof e&&e&&e.__esModule)return e;var i=Object.create(null);if(t.r(i),Object.defineProperty(i,"default",{enumerable:!0,value:e}),2&n&&"string"!=typeof e)for(var c in e)t.d(i,c,function(n){return e[n]}.bind(null,c));return i},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,"a",n),n},t.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},t.p="",t(t.s=24)}([function(e,n,t){var i={"./global.glsl":1};function c(e){var n=s(e);return t(n)}function s(e){if(!t.o(i,e)){var n=new Error("Cannot find module '"+e+"'");throw n.code="MODULE_NOT_FOUND",n}return i[e]}c.keys=function(){return Object.keys(i)},c.resolve=s,e.exports=c,c.id=0},function(e,n){e.exports="#define threadLocation() ivec2(texCoord * texSize)\n#define outputSize() ivec2(texSize)\n#define threadPixel(img) textureLod((img), texCoord, 0.0f)\n#define pixelAt(img, pos) texelFetch((img), (pos), 0)\n#define pixelAtOffset(img, offset) textureLodOffset((img), texCoord, 0.0f, (offset))"},function(e,n){e.exports="uniform sampler2D image;\nvoid main()\n{\ncolor = threadPixel(image);\n}"},function(e,n){e.exports="uniform sampler2D image;\nvoid main() {\nivec2 pos = threadLocation();\npos.y = int(texSize.y) - 1 - pos.y;\ncolor = pixelAt(image, pos);\n}"},function(e,n){e.exports="const vec4 grey = vec4(0.299f, 0.587f, 0.114f, 0.0f);\nuniform sampler2D image;\nvoid main()\n{\nvec4 pixel = threadPixel(image);\nfloat g = dot(pixel, grey);\ncolor = vec4(g, g, g, 1.0f);\n}"},function(e,n){e.exports="uniform sampler2D image;\nuniform float threshold;\nvoid main()\n{\nivec2 thread = threadLocation();\nivec2 size = outputSize();\nvec4 pixel = threadPixel(image);\ncolor = vec4(0.0f, pixel.gba);\nif(\nthread.x >= 3 && thread.x < size.x - 3 &&\nthread.y >= 3 && thread.y < size.y - 3\n) {\nfloat t = clamp(threshold, 0.0f, 1.0f);\nfloat c = pixel.g;\nfloat ct = c + t, c_t = c - t;\nfloat p0 = pixelAtOffset(image, ivec2(0, 3)).g;\nfloat p1 = pixelAtOffset(image, ivec2(1, 3)).g;\nfloat p2 = pixelAtOffset(image, ivec2(2, 2)).g;\nfloat p3 = pixelAtOffset(image, ivec2(3, 1)).g;\nfloat p4 = pixelAtOffset(image, ivec2(3, 0)).g;\nfloat p5 = pixelAtOffset(image, ivec2(3, -1)).g;\nfloat p6 = pixelAtOffset(image, ivec2(2, -2)).g;\nfloat p7 = pixelAtOffset(image, ivec2(1, -3)).g;\nfloat p8 = pixelAtOffset(image, ivec2(0, -3)).g;\nfloat p9 = pixelAtOffset(image, ivec2(-1, -3)).g;\nfloat p10 = pixelAtOffset(image, ivec2(-2, -2)).g;\nfloat p11 = pixelAtOffset(image, ivec2(-3, -1)).g;\nfloat p12 = pixelAtOffset(image, ivec2(-3, 0)).g;\nfloat p13 = pixelAtOffset(image, ivec2(-3, 1)).g;\nfloat p14 = pixelAtOffset(image, ivec2(-2, 2)).g;\nfloat p15 = pixelAtOffset(image, ivec2(-1, 3)).g;\nbool possibleCorner =\n((c_t > p0 || c_t > p8) && (c_t > p4 || c_t > p12)) ||\n((ct < p0  || ct < p8)  && (ct < p4  || ct < p12))  ;\nif(possibleCorner) {\nint bright = 0, dark = 0, bc = 0, dc = 0;\nif(c_t > p0) { dc = 0; bc += 1; if(bc > bright) bright = bc; }\nelse { bc = 0; if(ct < p0) { dc += 1; if(dc > dark) dark = dc; } else dc = 0; }\nif(c_t > p1) { dc = 0; bc += 1; if(bc > bright) bright = bc; }\nelse { bc = 0; if(ct < p1) { dc += 1; if(dc > dark) dark = dc; } else dc = 0; }\nif(c_t > p2) { dc = 0; bc += 1; if(bc > bright) bright = bc; }\nelse { bc = 0; if(ct < p2) { dc += 1; if(dc > dark) dark = dc; } else dc = 0; }\nif(c_t > p3) { dc = 0; bc += 1; if(bc > bright) bright = bc; }\nelse { bc = 0; if(ct < p3) { dc += 1; if(dc > dark) dark = dc; } else dc = 0; }\nif(c_t > p4) { dc = 0; bc += 1; if(bc > bright) bright = bc; }\nelse { bc = 0; if(ct < p4) { dc += 1; if(dc > dark) dark = dc; } else dc = 0; }\nif(c_t > p5) { dc = 0; bc += 1; if(bc > bright) bright = bc; }\nelse { bc = 0; if(ct < p5) { dc += 1; if(dc > dark) dark = dc; } else dc = 0; }\nif(c_t > p6) { dc = 0; bc += 1; if(bc > bright) bright = bc; }\nelse { bc = 0; if(ct < p6) { dc += 1; if(dc > dark) dark = dc; } else dc = 0; }\nif(c_t > p7) { dc = 0; bc += 1; if(bc > bright) bright = bc; }\nelse { bc = 0; if(ct < p7) { dc += 1; if(dc > dark) dark = dc; } else dc = 0; }\nif(c_t > p8) { dc = 0; bc += 1; if(bc > bright) bright = bc; }\nelse { bc = 0; if(ct < p8) { dc += 1; if(dc > dark) dark = dc; } else dc = 0; }\nif(c_t > p9) { dc = 0; bc += 1; if(bc > bright) bright = bc; }\nelse { bc = 0; if(ct < p9) { dc += 1; if(dc > dark) dark = dc; } else dc = 0; }\nif(c_t > p10) { dc = 0; bc += 1; if(bc > bright) bright = bc; }\nelse { bc = 0; if(ct < p10) { dc += 1; if(dc > dark) dark = dc; } else dc = 0; }\nif(c_t > p11) { dc = 0; bc += 1; if(bc > bright) bright = bc; }\nelse { bc = 0; if(ct < p11) { dc += 1; if(dc > dark) dark = dc; } else dc = 0; }\nif(c_t > p12) { dc = 0; bc += 1; if(bc > bright) bright = bc; }\nelse { bc = 0; if(ct < p12) { dc += 1; if(dc > dark) dark = dc; } else dc = 0; }\nif(c_t > p13) { dc = 0; bc += 1; if(bc > bright) bright = bc; }\nelse { bc = 0; if(ct < p13) { dc += 1; if(dc > dark) dark = dc; } else dc = 0; }\nif(c_t > p14) { dc = 0; bc += 1; if(bc > bright) bright = bc; }\nelse { bc = 0; if(ct < p14) { dc += 1; if(dc > dark) dark = dc; } else dc = 0; }\nif(c_t > p15) { dc = 0; bc += 1; if(bc > bright) bright = bc; }\nelse { bc = 0; if(ct < p15) { dc += 1; if(dc > dark) dark = dc; } else dc = 0; }\nif(bright < 9 && dark < 9) {\nif(bc > 0 && bc < 9) do {\nif(c_t > p0)           bc += 1; else break;\nif(c_t > p1 && bc < 9) bc += 1; else break;\nif(c_t > p2 && bc < 9) bc += 1; else break;\nif(c_t > p3 && bc < 9) bc += 1; else break;\nif(c_t > p4 && bc < 9) bc += 1; else break;\nif(c_t > p5 && bc < 9) bc += 1; else break;\nif(c_t > p6 && bc < 9) bc += 1; else break;\nif(c_t > p7 && bc < 9) bc += 1; else break;\n} while(false);\nif(dc > 0 && dc < 9) do {\nif(ct < p0)           dc += 1; else break;\nif(ct < p1 && dc < 9) dc += 1; else break;\nif(ct < p2 && dc < 9) dc += 1; else break;\nif(ct < p3 && dc < 9) dc += 1; else break;\nif(ct < p4 && dc < 9) dc += 1; else break;\nif(ct < p5 && dc < 9) dc += 1; else break;\nif(ct < p6 && dc < 9) dc += 1; else break;\nif(ct < p7 && dc < 9) dc += 1; else break;\n} while(false);\nif(bc >= 9 || dc >= 9)\ncolor = vec4(1.0f, pixel.gba);\n}\nelse {\ncolor = vec4(1.0f, pixel.gba);\n}\n}\n}\n}"},function(e,n){e.exports="uniform sampler2D image;\nuniform float threshold;\nvoid main()\n{\nvec4 pixel = threadPixel(image);\nivec2 thread = threadLocation();\nivec2 size = outputSize();\ncolor = vec4(0.0f, pixel.gba);\nif(thread.x < 3 || thread.y < 3 || thread.x >= size.x - 3 || thread.y >= size.y - 3)\nreturn;\nfloat t = clamp(threshold, 0.0f, 1.0f);\nfloat c = pixel.g;\nfloat ct = c + t, c_t = c - t;\nfloat p0 = pixelAtOffset(image, ivec2(0, 3)).g;\nfloat p4 = pixelAtOffset(image, ivec2(3, 0)).g;\nfloat p8 = pixelAtOffset(image, ivec2(0, -3)).g;\nfloat p12 = pixelAtOffset(image, ivec2(-3, 0)).g;\nif(!(\n((c_t > p0 || c_t > p8) && (c_t > p4 || c_t > p12)) ||\n((ct < p0  || ct < p8)  && (ct < p4  || ct < p12))\n))\nreturn;\nfloat p1 = pixelAtOffset(image, ivec2(1, 3)).g;\nfloat p2 = pixelAtOffset(image, ivec2(2, 2)).g;\nfloat p3 = pixelAtOffset(image, ivec2(3, 1)).g;\nfloat p5 = pixelAtOffset(image, ivec2(3, -1)).g;\nfloat p6 = pixelAtOffset(image, ivec2(2, -2)).g;\nfloat p7 = pixelAtOffset(image, ivec2(1, -3)).g;\nfloat p9 = pixelAtOffset(image, ivec2(-1, -3)).g;\nfloat p10 = pixelAtOffset(image, ivec2(-2, -2)).g;\nfloat p11 = pixelAtOffset(image, ivec2(-3, -1)).g;\nfloat p13 = pixelAtOffset(image, ivec2(-3, 1)).g;\nfloat p14 = pixelAtOffset(image, ivec2(-2, 2)).g;\nfloat p15 = pixelAtOffset(image, ivec2(-1, 3)).g;\nif(p0 > ct)\nif(p1 > ct)\nif(p2 > ct)\nif(p3 > ct)\nif(p4 > ct)\nif(p5 > ct)\nif(p6 > ct)\nif(p7 > ct)\nif(p8 > ct)\ncolor = vec4(1.0f, pixel.gba);\nelse\nif(p15 > ct)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse if(p7 < c_t)\nif(p14 > ct)\nif(p15 > ct)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse if(p14 < c_t)\nif(p8 < c_t)\nif(p9 < c_t)\nif(p10 < c_t)\nif(p11 < c_t)\nif(p12 < c_t)\nif(p13 < c_t)\nif(p15 < c_t)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\nif(p14 > ct)\nif(p15 > ct)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse if(p6 < c_t)\nif(p15 > ct)\nif(p13 > ct)\nif(p14 > ct)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse if(p13 < c_t)\nif(p7 < c_t)\nif(p8 < c_t)\nif(p9 < c_t)\nif(p10 < c_t)\nif(p11 < c_t)\nif(p12 < c_t)\nif(p14 < c_t)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\nif(p7 < c_t)\nif(p8 < c_t)\nif(p9 < c_t)\nif(p10 < c_t)\nif(p11 < c_t)\nif(p12 < c_t)\nif(p13 < c_t)\nif(p14 < c_t)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\nif(p13 > ct)\nif(p14 > ct)\nif(p15 > ct)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse if(p13 < c_t)\nif(p7 < c_t)\nif(p8 < c_t)\nif(p9 < c_t)\nif(p10 < c_t)\nif(p11 < c_t)\nif(p12 < c_t)\nif(p14 < c_t)\nif(p15 < c_t)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse if(p5 < c_t)\nif(p14 > ct)\nif(p12 > ct)\nif(p13 > ct)\nif(p15 > ct)\ncolor = vec4(1.0f, pixel.gba);\nelse\nif(p6 > ct)\nif(p7 > ct)\nif(p8 > ct)\nif(p9 > ct)\nif(p10 > ct)\nif(p11 > ct)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse if(p12 < c_t)\nif(p6 < c_t)\nif(p7 < c_t)\nif(p8 < c_t)\nif(p9 < c_t)\nif(p10 < c_t)\nif(p11 < c_t)\nif(p13 < c_t)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse if(p14 < c_t)\nif(p7 < c_t)\nif(p8 < c_t)\nif(p9 < c_t)\nif(p10 < c_t)\nif(p11 < c_t)\nif(p12 < c_t)\nif(p13 < c_t)\nif(p6 < c_t)\ncolor = vec4(1.0f, pixel.gba);\nelse\nif(p15 < c_t)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\nif(p6 < c_t)\nif(p7 < c_t)\nif(p8 < c_t)\nif(p9 < c_t)\nif(p10 < c_t)\nif(p11 < c_t)\nif(p12 < c_t)\nif(p13 < c_t)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\nif(p12 > ct)\nif(p13 > ct)\nif(p14 > ct)\nif(p15 > ct)\ncolor = vec4(1.0f, pixel.gba);\nelse\nif(p6 > ct)\nif(p7 > ct)\nif(p8 > ct)\nif(p9 > ct)\nif(p10 > ct)\nif(p11 > ct)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse if(p12 < c_t)\nif(p7 < c_t)\nif(p8 < c_t)\nif(p9 < c_t)\nif(p10 < c_t)\nif(p11 < c_t)\nif(p13 < c_t)\nif(p14 < c_t)\nif(p6 < c_t)\ncolor = vec4(1.0f, pixel.gba);\nelse\nif(p15 < c_t)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse if(p4 < c_t)\nif(p13 > ct)\nif(p11 > ct)\nif(p12 > ct)\nif(p14 > ct)\nif(p15 > ct)\ncolor = vec4(1.0f, pixel.gba);\nelse\nif(p6 > ct)\nif(p7 > ct)\nif(p8 > ct)\nif(p9 > ct)\nif(p10 > ct)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\nif(p5 > ct)\nif(p6 > ct)\nif(p7 > ct)\nif(p8 > ct)\nif(p9 > ct)\nif(p10 > ct)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse if(p11 < c_t)\nif(p5 < c_t)\nif(p6 < c_t)\nif(p7 < c_t)\nif(p8 < c_t)\nif(p9 < c_t)\nif(p10 < c_t)\nif(p12 < c_t)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse if(p13 < c_t)\nif(p7 < c_t)\nif(p8 < c_t)\nif(p9 < c_t)\nif(p10 < c_t)\nif(p11 < c_t)\nif(p12 < c_t)\nif(p6 < c_t)\nif(p5 < c_t)\ncolor = vec4(1.0f, pixel.gba);\nelse\nif(p14 < c_t)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\nif(p14 < c_t)\nif(p15 < c_t)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\nif(p5 < c_t)\nif(p6 < c_t)\nif(p7 < c_t)\nif(p8 < c_t)\nif(p9 < c_t)\nif(p10 < c_t)\nif(p11 < c_t)\nif(p12 < c_t)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\nif(p11 > ct)\nif(p12 > ct)\nif(p13 > ct)\nif(p14 > ct)\nif(p15 > ct)\ncolor = vec4(1.0f, pixel.gba);\nelse\nif(p6 > ct)\nif(p7 > ct)\nif(p8 > ct)\nif(p9 > ct)\nif(p10 > ct)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\nif(p5 > ct)\nif(p6 > ct)\nif(p7 > ct)\nif(p8 > ct)\nif(p9 > ct)\nif(p10 > ct)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse if(p11 < c_t)\nif(p7 < c_t)\nif(p8 < c_t)\nif(p9 < c_t)\nif(p10 < c_t)\nif(p12 < c_t)\nif(p13 < c_t)\nif(p6 < c_t)\nif(p5 < c_t)\ncolor = vec4(1.0f, pixel.gba);\nelse\nif(p14 < c_t)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\nif(p14 < c_t)\nif(p15 < c_t)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse if(p3 < c_t)\nif(p10 > ct)\nif(p11 > ct)\nif(p12 > ct)\nif(p13 > ct)\nif(p14 > ct)\nif(p15 > ct)\ncolor = vec4(1.0f, pixel.gba);\nelse\nif(p6 > ct)\nif(p7 > ct)\nif(p8 > ct)\nif(p9 > ct)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\nif(p5 > ct)\nif(p6 > ct)\nif(p7 > ct)\nif(p8 > ct)\nif(p9 > ct)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\nif(p4 > ct)\nif(p5 > ct)\nif(p6 > ct)\nif(p7 > ct)\nif(p8 > ct)\nif(p9 > ct)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse if(p10 < c_t)\nif(p7 < c_t)\nif(p8 < c_t)\nif(p9 < c_t)\nif(p11 < c_t)\nif(p6 < c_t)\nif(p5 < c_t)\nif(p4 < c_t)\ncolor = vec4(1.0f, pixel.gba);\nelse\nif(p12 < c_t)\nif(p13 < c_t)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\nif(p12 < c_t)\nif(p13 < c_t)\nif(p14 < c_t)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\nif(p12 < c_t)\nif(p13 < c_t)\nif(p14 < c_t)\nif(p15 < c_t)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\nif(p10 > ct)\nif(p11 > ct)\nif(p12 > ct)\nif(p13 > ct)\nif(p14 > ct)\nif(p15 > ct)\ncolor = vec4(1.0f, pixel.gba);\nelse\nif(p6 > ct)\nif(p7 > ct)\nif(p8 > ct)\nif(p9 > ct)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\nif(p5 > ct)\nif(p6 > ct)\nif(p7 > ct)\nif(p8 > ct)\nif(p9 > ct)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\nif(p4 > ct)\nif(p5 > ct)\nif(p6 > ct)\nif(p7 > ct)\nif(p8 > ct)\nif(p9 > ct)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse if(p10 < c_t)\nif(p7 < c_t)\nif(p8 < c_t)\nif(p9 < c_t)\nif(p11 < c_t)\nif(p12 < c_t)\nif(p6 < c_t)\nif(p5 < c_t)\nif(p4 < c_t)\ncolor = vec4(1.0f, pixel.gba);\nelse\nif(p13 < c_t)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\nif(p13 < c_t)\nif(p14 < c_t)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\nif(p13 < c_t)\nif(p14 < c_t)\nif(p15 < c_t)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse if(p2 < c_t)\nif(p9 > ct)\nif(p10 > ct)\nif(p11 > ct)\nif(p12 > ct)\nif(p13 > ct)\nif(p14 > ct)\nif(p15 > ct)\ncolor = vec4(1.0f, pixel.gba);\nelse\nif(p6 > ct)\nif(p7 > ct)\nif(p8 > ct)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\nif(p5 > ct)\nif(p6 > ct)\nif(p7 > ct)\nif(p8 > ct)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\nif(p4 > ct)\nif(p5 > ct)\nif(p6 > ct)\nif(p7 > ct)\nif(p8 > ct)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\nif(p3 > ct)\nif(p4 > ct)\nif(p5 > ct)\nif(p6 > ct)\nif(p7 > ct)\nif(p8 > ct)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse if(p9 < c_t)\nif(p7 < c_t)\nif(p8 < c_t)\nif(p10 < c_t)\nif(p6 < c_t)\nif(p5 < c_t)\nif(p4 < c_t)\nif(p3 < c_t)\ncolor = vec4(1.0f, pixel.gba);\nelse\nif(p11 < c_t)\nif(p12 < c_t)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\nif(p11 < c_t)\nif(p12 < c_t)\nif(p13 < c_t)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\nif(p11 < c_t)\nif(p12 < c_t)\nif(p13 < c_t)\nif(p14 < c_t)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\nif(p11 < c_t)\nif(p12 < c_t)\nif(p13 < c_t)\nif(p14 < c_t)\nif(p15 < c_t)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\nif(p9 > ct)\nif(p10 > ct)\nif(p11 > ct)\nif(p12 > ct)\nif(p13 > ct)\nif(p14 > ct)\nif(p15 > ct)\ncolor = vec4(1.0f, pixel.gba);\nelse\nif(p6 > ct)\nif(p7 > ct)\nif(p8 > ct)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\nif(p5 > ct)\nif(p6 > ct)\nif(p7 > ct)\nif(p8 > ct)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\nif(p4 > ct)\nif(p5 > ct)\nif(p6 > ct)\nif(p7 > ct)\nif(p8 > ct)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\nif(p3 > ct)\nif(p4 > ct)\nif(p5 > ct)\nif(p6 > ct)\nif(p7 > ct)\nif(p8 > ct)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse if(p9 < c_t)\nif(p7 < c_t)\nif(p8 < c_t)\nif(p10 < c_t)\nif(p11 < c_t)\nif(p6 < c_t)\nif(p5 < c_t)\nif(p4 < c_t)\nif(p3 < c_t)\ncolor = vec4(1.0f, pixel.gba);\nelse\nif(p12 < c_t)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\nif(p12 < c_t)\nif(p13 < c_t)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\nif(p12 < c_t)\nif(p13 < c_t)\nif(p14 < c_t)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\nif(p12 < c_t)\nif(p13 < c_t)\nif(p14 < c_t)\nif(p15 < c_t)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse if(p1 < c_t)\nif(p8 > ct)\nif(p9 > ct)\nif(p10 > ct)\nif(p11 > ct)\nif(p12 > ct)\nif(p13 > ct)\nif(p14 > ct)\nif(p15 > ct)\ncolor = vec4(1.0f, pixel.gba);\nelse\nif(p6 > ct)\nif(p7 > ct)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\nif(p5 > ct)\nif(p6 > ct)\nif(p7 > ct)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\nif(p4 > ct)\nif(p5 > ct)\nif(p6 > ct)\nif(p7 > ct)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\nif(p3 > ct)\nif(p4 > ct)\nif(p5 > ct)\nif(p6 > ct)\nif(p7 > ct)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\nif(p2 > ct)\nif(p3 > ct)\nif(p4 > ct)\nif(p5 > ct)\nif(p6 > ct)\nif(p7 > ct)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse if(p8 < c_t)\nif(p7 < c_t)\nif(p9 < c_t)\nif(p6 < c_t)\nif(p5 < c_t)\nif(p4 < c_t)\nif(p3 < c_t)\nif(p2 < c_t)\ncolor = vec4(1.0f, pixel.gba);\nelse\nif(p10 < c_t)\nif(p11 < c_t)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\nif(p10 < c_t)\nif(p11 < c_t)\nif(p12 < c_t)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\nif(p10 < c_t)\nif(p11 < c_t)\nif(p12 < c_t)\nif(p13 < c_t)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\nif(p10 < c_t)\nif(p11 < c_t)\nif(p12 < c_t)\nif(p13 < c_t)\nif(p14 < c_t)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\nif(p10 < c_t)\nif(p11 < c_t)\nif(p12 < c_t)\nif(p13 < c_t)\nif(p14 < c_t)\nif(p15 < c_t)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\nif(p8 > ct)\nif(p9 > ct)\nif(p10 > ct)\nif(p11 > ct)\nif(p12 > ct)\nif(p13 > ct)\nif(p14 > ct)\nif(p15 > ct)\ncolor = vec4(1.0f, pixel.gba);\nelse\nif(p6 > ct)\nif(p7 > ct)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\nif(p5 > ct)\nif(p6 > ct)\nif(p7 > ct)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\nif(p4 > ct)\nif(p5 > ct)\nif(p6 > ct)\nif(p7 > ct)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\nif(p3 > ct)\nif(p4 > ct)\nif(p5 > ct)\nif(p6 > ct)\nif(p7 > ct)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\nif(p2 > ct)\nif(p3 > ct)\nif(p4 > ct)\nif(p5 > ct)\nif(p6 > ct)\nif(p7 > ct)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse if(p8 < c_t)\nif(p7 < c_t)\nif(p9 < c_t)\nif(p10 < c_t)\nif(p6 < c_t)\nif(p5 < c_t)\nif(p4 < c_t)\nif(p3 < c_t)\nif(p2 < c_t)\ncolor = vec4(1.0f, pixel.gba);\nelse\nif(p11 < c_t)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\nif(p11 < c_t)\nif(p12 < c_t)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\nif(p11 < c_t)\nif(p12 < c_t)\nif(p13 < c_t)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\nif(p11 < c_t)\nif(p12 < c_t)\nif(p13 < c_t)\nif(p14 < c_t)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\nif(p11 < c_t)\nif(p12 < c_t)\nif(p13 < c_t)\nif(p14 < c_t)\nif(p15 < c_t)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse if(p0 < c_t)\nif(p1 > ct)\nif(p8 > ct)\nif(p7 > ct)\nif(p9 > ct)\nif(p6 > ct)\nif(p5 > ct)\nif(p4 > ct)\nif(p3 > ct)\nif(p2 > ct)\ncolor = vec4(1.0f, pixel.gba);\nelse\nif(p10 > ct)\nif(p11 > ct)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\nif(p10 > ct)\nif(p11 > ct)\nif(p12 > ct)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\nif(p10 > ct)\nif(p11 > ct)\nif(p12 > ct)\nif(p13 > ct)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\nif(p10 > ct)\nif(p11 > ct)\nif(p12 > ct)\nif(p13 > ct)\nif(p14 > ct)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\nif(p10 > ct)\nif(p11 > ct)\nif(p12 > ct)\nif(p13 > ct)\nif(p14 > ct)\nif(p15 > ct)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse if(p8 < c_t)\nif(p9 < c_t)\nif(p10 < c_t)\nif(p11 < c_t)\nif(p12 < c_t)\nif(p13 < c_t)\nif(p14 < c_t)\nif(p15 < c_t)\ncolor = vec4(1.0f, pixel.gba);\nelse\nif(p6 < c_t)\nif(p7 < c_t)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\nif(p5 < c_t)\nif(p6 < c_t)\nif(p7 < c_t)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\nif(p4 < c_t)\nif(p5 < c_t)\nif(p6 < c_t)\nif(p7 < c_t)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\nif(p3 < c_t)\nif(p4 < c_t)\nif(p5 < c_t)\nif(p6 < c_t)\nif(p7 < c_t)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\nif(p2 < c_t)\nif(p3 < c_t)\nif(p4 < c_t)\nif(p5 < c_t)\nif(p6 < c_t)\nif(p7 < c_t)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse if(p1 < c_t)\nif(p2 > ct)\nif(p9 > ct)\nif(p7 > ct)\nif(p8 > ct)\nif(p10 > ct)\nif(p6 > ct)\nif(p5 > ct)\nif(p4 > ct)\nif(p3 > ct)\ncolor = vec4(1.0f, pixel.gba);\nelse\nif(p11 > ct)\nif(p12 > ct)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\nif(p11 > ct)\nif(p12 > ct)\nif(p13 > ct)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\nif(p11 > ct)\nif(p12 > ct)\nif(p13 > ct)\nif(p14 > ct)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\nif(p11 > ct)\nif(p12 > ct)\nif(p13 > ct)\nif(p14 > ct)\nif(p15 > ct)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse if(p9 < c_t)\nif(p10 < c_t)\nif(p11 < c_t)\nif(p12 < c_t)\nif(p13 < c_t)\nif(p14 < c_t)\nif(p15 < c_t)\ncolor = vec4(1.0f, pixel.gba);\nelse\nif(p6 < c_t)\nif(p7 < c_t)\nif(p8 < c_t)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\nif(p5 < c_t)\nif(p6 < c_t)\nif(p7 < c_t)\nif(p8 < c_t)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\nif(p4 < c_t)\nif(p5 < c_t)\nif(p6 < c_t)\nif(p7 < c_t)\nif(p8 < c_t)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\nif(p3 < c_t)\nif(p4 < c_t)\nif(p5 < c_t)\nif(p6 < c_t)\nif(p7 < c_t)\nif(p8 < c_t)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse if(p2 < c_t)\nif(p3 > ct)\nif(p10 > ct)\nif(p7 > ct)\nif(p8 > ct)\nif(p9 > ct)\nif(p11 > ct)\nif(p6 > ct)\nif(p5 > ct)\nif(p4 > ct)\ncolor = vec4(1.0f, pixel.gba);\nelse\nif(p12 > ct)\nif(p13 > ct)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\nif(p12 > ct)\nif(p13 > ct)\nif(p14 > ct)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\nif(p12 > ct)\nif(p13 > ct)\nif(p14 > ct)\nif(p15 > ct)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse if(p10 < c_t)\nif(p11 < c_t)\nif(p12 < c_t)\nif(p13 < c_t)\nif(p14 < c_t)\nif(p15 < c_t)\ncolor = vec4(1.0f, pixel.gba);\nelse\nif(p6 < c_t)\nif(p7 < c_t)\nif(p8 < c_t)\nif(p9 < c_t)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\nif(p5 < c_t)\nif(p6 < c_t)\nif(p7 < c_t)\nif(p8 < c_t)\nif(p9 < c_t)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\nif(p4 < c_t)\nif(p5 < c_t)\nif(p6 < c_t)\nif(p7 < c_t)\nif(p8 < c_t)\nif(p9 < c_t)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse if(p3 < c_t)\nif(p4 > ct)\nif(p13 > ct)\nif(p7 > ct)\nif(p8 > ct)\nif(p9 > ct)\nif(p10 > ct)\nif(p11 > ct)\nif(p12 > ct)\nif(p6 > ct)\nif(p5 > ct)\ncolor = vec4(1.0f, pixel.gba);\nelse\nif(p14 > ct)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\nif(p14 > ct)\nif(p15 > ct)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse if(p13 < c_t)\nif(p11 > ct)\nif(p5 > ct)\nif(p6 > ct)\nif(p7 > ct)\nif(p8 > ct)\nif(p9 > ct)\nif(p10 > ct)\nif(p12 > ct)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse if(p11 < c_t)\nif(p12 < c_t)\nif(p14 < c_t)\nif(p15 < c_t)\ncolor = vec4(1.0f, pixel.gba);\nelse\nif(p6 < c_t)\nif(p7 < c_t)\nif(p8 < c_t)\nif(p9 < c_t)\nif(p10 < c_t)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\nif(p5 < c_t)\nif(p6 < c_t)\nif(p7 < c_t)\nif(p8 < c_t)\nif(p9 < c_t)\nif(p10 < c_t)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\nif(p5 > ct)\nif(p6 > ct)\nif(p7 > ct)\nif(p8 > ct)\nif(p9 > ct)\nif(p10 > ct)\nif(p11 > ct)\nif(p12 > ct)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse if(p4 < c_t)\nif(p5 > ct)\nif(p14 > ct)\nif(p7 > ct)\nif(p8 > ct)\nif(p9 > ct)\nif(p10 > ct)\nif(p11 > ct)\nif(p12 > ct)\nif(p13 > ct)\nif(p6 > ct)\ncolor = vec4(1.0f, pixel.gba);\nelse\nif(p15 > ct)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse if(p14 < c_t)\nif(p12 > ct)\nif(p6 > ct)\nif(p7 > ct)\nif(p8 > ct)\nif(p9 > ct)\nif(p10 > ct)\nif(p11 > ct)\nif(p13 > ct)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse if(p12 < c_t)\nif(p13 < c_t)\nif(p15 < c_t)\ncolor = vec4(1.0f, pixel.gba);\nelse\nif(p6 < c_t)\nif(p7 < c_t)\nif(p8 < c_t)\nif(p9 < c_t)\nif(p10 < c_t)\nif(p11 < c_t)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\nif(p6 > ct)\nif(p7 > ct)\nif(p8 > ct)\nif(p9 > ct)\nif(p10 > ct)\nif(p11 > ct)\nif(p12 > ct)\nif(p13 > ct)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse if(p5 < c_t)\nif(p6 > ct)\nif(p15 < c_t)\nif(p13 > ct)\nif(p7 > ct)\nif(p8 > ct)\nif(p9 > ct)\nif(p10 > ct)\nif(p11 > ct)\nif(p12 > ct)\nif(p14 > ct)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse if(p13 < c_t)\nif(p14 < c_t)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\nif(p7 > ct)\nif(p8 > ct)\nif(p9 > ct)\nif(p10 > ct)\nif(p11 > ct)\nif(p12 > ct)\nif(p13 > ct)\nif(p14 > ct)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse if(p6 < c_t)\nif(p7 > ct)\nif(p14 > ct)\nif(p8 > ct)\nif(p9 > ct)\nif(p10 > ct)\nif(p11 > ct)\nif(p12 > ct)\nif(p13 > ct)\nif(p15 > ct)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse if(p14 < c_t)\nif(p15 < c_t)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse if(p7 < c_t)\nif(p8 < c_t)\ncolor = vec4(1.0f, pixel.gba);\nelse\nif(p15 < c_t)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\nif(p14 < c_t)\nif(p15 < c_t)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\nif(p13 > ct)\nif(p7 > ct)\nif(p8 > ct)\nif(p9 > ct)\nif(p10 > ct)\nif(p11 > ct)\nif(p12 > ct)\nif(p14 > ct)\nif(p15 > ct)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse if(p13 < c_t)\nif(p14 < c_t)\nif(p15 < c_t)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\nif(p12 > ct)\nif(p7 > ct)\nif(p8 > ct)\nif(p9 > ct)\nif(p10 > ct)\nif(p11 > ct)\nif(p13 > ct)\nif(p14 > ct)\nif(p6 > ct)\ncolor = vec4(1.0f, pixel.gba);\nelse\nif(p15 > ct)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse if(p12 < c_t)\nif(p13 < c_t)\nif(p14 < c_t)\nif(p15 < c_t)\ncolor = vec4(1.0f, pixel.gba);\nelse\nif(p6 < c_t)\nif(p7 < c_t)\nif(p8 < c_t)\nif(p9 < c_t)\nif(p10 < c_t)\nif(p11 < c_t)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\nif(p11 > ct)\nif(p7 > ct)\nif(p8 > ct)\nif(p9 > ct)\nif(p10 > ct)\nif(p12 > ct)\nif(p13 > ct)\nif(p6 > ct)\nif(p5 > ct)\ncolor = vec4(1.0f, pixel.gba);\nelse\nif(p14 > ct)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\nif(p14 > ct)\nif(p15 > ct)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse if(p11 < c_t)\nif(p12 < c_t)\nif(p13 < c_t)\nif(p14 < c_t)\nif(p15 < c_t)\ncolor = vec4(1.0f, pixel.gba);\nelse\nif(p6 < c_t)\nif(p7 < c_t)\nif(p8 < c_t)\nif(p9 < c_t)\nif(p10 < c_t)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\nif(p5 < c_t)\nif(p6 < c_t)\nif(p7 < c_t)\nif(p8 < c_t)\nif(p9 < c_t)\nif(p10 < c_t)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\nif(p10 > ct)\nif(p7 > ct)\nif(p8 > ct)\nif(p9 > ct)\nif(p11 > ct)\nif(p12 > ct)\nif(p6 > ct)\nif(p5 > ct)\nif(p4 > ct)\ncolor = vec4(1.0f, pixel.gba);\nelse\nif(p13 > ct)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\nif(p13 > ct)\nif(p14 > ct)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\nif(p13 > ct)\nif(p14 > ct)\nif(p15 > ct)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse if(p10 < c_t)\nif(p11 < c_t)\nif(p12 < c_t)\nif(p13 < c_t)\nif(p14 < c_t)\nif(p15 < c_t)\ncolor = vec4(1.0f, pixel.gba);\nelse\nif(p6 < c_t)\nif(p7 < c_t)\nif(p8 < c_t)\nif(p9 < c_t)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\nif(p5 < c_t)\nif(p6 < c_t)\nif(p7 < c_t)\nif(p8 < c_t)\nif(p9 < c_t)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\nif(p4 < c_t)\nif(p5 < c_t)\nif(p6 < c_t)\nif(p7 < c_t)\nif(p8 < c_t)\nif(p9 < c_t)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\nif(p9 > ct)\nif(p7 > ct)\nif(p8 > ct)\nif(p10 > ct)\nif(p11 > ct)\nif(p6 > ct)\nif(p5 > ct)\nif(p4 > ct)\nif(p3 > ct)\ncolor = vec4(1.0f, pixel.gba);\nelse\nif(p12 > ct)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\nif(p12 > ct)\nif(p13 > ct)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\nif(p12 > ct)\nif(p13 > ct)\nif(p14 > ct)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\nif(p12 > ct)\nif(p13 > ct)\nif(p14 > ct)\nif(p15 > ct)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse if(p9 < c_t)\nif(p10 < c_t)\nif(p11 < c_t)\nif(p12 < c_t)\nif(p13 < c_t)\nif(p14 < c_t)\nif(p15 < c_t)\ncolor = vec4(1.0f, pixel.gba);\nelse\nif(p6 < c_t)\nif(p7 < c_t)\nif(p8 < c_t)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\nif(p5 < c_t)\nif(p6 < c_t)\nif(p7 < c_t)\nif(p8 < c_t)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\nif(p4 < c_t)\nif(p5 < c_t)\nif(p6 < c_t)\nif(p7 < c_t)\nif(p8 < c_t)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\nif(p3 < c_t)\nif(p4 < c_t)\nif(p5 < c_t)\nif(p6 < c_t)\nif(p7 < c_t)\nif(p8 < c_t)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\nif(p8 > ct)\nif(p7 > ct)\nif(p9 > ct)\nif(p10 > ct)\nif(p6 > ct)\nif(p5 > ct)\nif(p4 > ct)\nif(p3 > ct)\nif(p2 > ct)\ncolor = vec4(1.0f, pixel.gba);\nelse\nif(p11 > ct)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\nif(p11 > ct)\nif(p12 > ct)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\nif(p11 > ct)\nif(p12 > ct)\nif(p13 > ct)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\nif(p11 > ct)\nif(p12 > ct)\nif(p13 > ct)\nif(p14 > ct)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\nif(p11 > ct)\nif(p12 > ct)\nif(p13 > ct)\nif(p14 > ct)\nif(p15 > ct)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse if(p8 < c_t)\nif(p9 < c_t)\nif(p10 < c_t)\nif(p11 < c_t)\nif(p12 < c_t)\nif(p13 < c_t)\nif(p14 < c_t)\nif(p15 < c_t)\ncolor = vec4(1.0f, pixel.gba);\nelse\nif(p6 < c_t)\nif(p7 < c_t)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\nif(p5 < c_t)\nif(p6 < c_t)\nif(p7 < c_t)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\nif(p4 < c_t)\nif(p5 < c_t)\nif(p6 < c_t)\nif(p7 < c_t)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\nif(p3 < c_t)\nif(p4 < c_t)\nif(p5 < c_t)\nif(p6 < c_t)\nif(p7 < c_t)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\nif(p2 < c_t)\nif(p3 < c_t)\nif(p4 < c_t)\nif(p5 < c_t)\nif(p6 < c_t)\nif(p7 < c_t)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\nif(p7 > ct)\nif(p8 > ct)\nif(p9 > ct)\nif(p6 > ct)\nif(p5 > ct)\nif(p4 > ct)\nif(p3 > ct)\nif(p2 > ct)\nif(p1 > ct)\ncolor = vec4(1.0f, pixel.gba);\nelse\nif(p10 > ct)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\nif(p10 > ct)\nif(p11 > ct)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\nif(p10 > ct)\nif(p11 > ct)\nif(p12 > ct)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\nif(p10 > ct)\nif(p11 > ct)\nif(p12 > ct)\nif(p13 > ct)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\nif(p10 > ct)\nif(p11 > ct)\nif(p12 > ct)\nif(p13 > ct)\nif(p14 > ct)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\nif(p10 > ct)\nif(p11 > ct)\nif(p12 > ct)\nif(p13 > ct)\nif(p14 > ct)\nif(p15 > ct)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse if(p7 < c_t)\nif(p8 < c_t)\nif(p9 < c_t)\nif(p6 < c_t)\nif(p5 < c_t)\nif(p4 < c_t)\nif(p3 < c_t)\nif(p2 < c_t)\nif(p1 < c_t)\ncolor = vec4(1.0f, pixel.gba);\nelse\nif(p10 < c_t)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\nif(p10 < c_t)\nif(p11 < c_t)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\nif(p10 < c_t)\nif(p11 < c_t)\nif(p12 < c_t)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\nif(p10 < c_t)\nif(p11 < c_t)\nif(p12 < c_t)\nif(p13 < c_t)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\nif(p10 < c_t)\nif(p11 < c_t)\nif(p12 < c_t)\nif(p13 < c_t)\nif(p14 < c_t)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\nif(p10 < c_t)\nif(p11 < c_t)\nif(p12 < c_t)\nif(p13 < c_t)\nif(p14 < c_t)\nif(p15 < c_t)\ncolor = vec4(1.0f, pixel.gba);\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\nelse\n;\n}"},function(e,n){e.exports="uniform sampler2D image;\nuniform float threshold;\nvoid main()\n{\nivec2 thread = threadLocation();\nivec2 size = outputSize();\nvec4 pixel = threadPixel(image);\ncolor = vec4(0.0f, pixel.gba);\nif(\nthread.x >= 3 && thread.x < size.x - 3 &&\nthread.y >= 3 && thread.y < size.y - 3\n) {\nfloat t = clamp(threshold, 0.0f, 1.0f);\nfloat c = pixel.g;\nfloat ct = c + t, c_t = c - t;\nfloat p0 = pixelAtOffset(image, ivec2(0, 2)).g;\nfloat p1 = pixelAtOffset(image, ivec2(1, 2)).g;\nfloat p2 = pixelAtOffset(image, ivec2(2, 1)).g;\nfloat p3 = pixelAtOffset(image, ivec2(2, 0)).g;\nfloat p4 = pixelAtOffset(image, ivec2(2, -1)).g;\nfloat p5 = pixelAtOffset(image, ivec2(1, -2)).g;\nfloat p6 = pixelAtOffset(image, ivec2(0, -2)).g;\nfloat p7 = pixelAtOffset(image, ivec2(-1, -2)).g;\nfloat p8 = pixelAtOffset(image, ivec2(-2, -1)).g;\nfloat p9 = pixelAtOffset(image, ivec2(-2, 0)).g;\nfloat p10 = pixelAtOffset(image, ivec2(-2, 1)).g;\nfloat p11 = pixelAtOffset(image, ivec2(-1, 2)).g;\nbool possibleCorner =\n((c_t > p0 || c_t > p6) && (c_t > p3 || c_t > p9)) ||\n((ct < p0  || ct < p6)  && (ct < p3  || ct < p9))  ;\nif(possibleCorner) {\nint bright = 0, dark = 0, bc = 0, dc = 0;\nif(c_t > p0) { dc = 0; bc += 1; if(bc > bright) bright = bc; }\nelse { bc = 0; if(ct < p0) { dc += 1; if(dc > dark) dark = dc; } else dc = 0; }\nif(c_t > p1) { dc = 0; bc += 1; if(bc > bright) bright = bc; }\nelse { bc = 0; if(ct < p1) { dc += 1; if(dc > dark) dark = dc; } else dc = 0; }\nif(c_t > p2) { dc = 0; bc += 1; if(bc > bright) bright = bc; }\nelse { bc = 0; if(ct < p2) { dc += 1; if(dc > dark) dark = dc; } else dc = 0; }\nif(c_t > p3) { dc = 0; bc += 1; if(bc > bright) bright = bc; }\nelse { bc = 0; if(ct < p3) { dc += 1; if(dc > dark) dark = dc; } else dc = 0; }\nif(c_t > p4) { dc = 0; bc += 1; if(bc > bright) bright = bc; }\nelse { bc = 0; if(ct < p4) { dc += 1; if(dc > dark) dark = dc; } else dc = 0; }\nif(c_t > p5) { dc = 0; bc += 1; if(bc > bright) bright = bc; }\nelse { bc = 0; if(ct < p5) { dc += 1; if(dc > dark) dark = dc; } else dc = 0; }\nif(c_t > p6) { dc = 0; bc += 1; if(bc > bright) bright = bc; }\nelse { bc = 0; if(ct < p6) { dc += 1; if(dc > dark) dark = dc; } else dc = 0; }\nif(c_t > p7) { dc = 0; bc += 1; if(bc > bright) bright = bc; }\nelse { bc = 0; if(ct < p7) { dc += 1; if(dc > dark) dark = dc; } else dc = 0; }\nif(c_t > p8) { dc = 0; bc += 1; if(bc > bright) bright = bc; }\nelse { bc = 0; if(ct < p8) { dc += 1; if(dc > dark) dark = dc; } else dc = 0; }\nif(c_t > p9) { dc = 0; bc += 1; if(bc > bright) bright = bc; }\nelse { bc = 0; if(ct < p9) { dc += 1; if(dc > dark) dark = dc; } else dc = 0; }\nif(c_t > p10) { dc = 0; bc += 1; if(bc > bright) bright = bc; }\nelse { bc = 0; if(ct < p10) { dc += 1; if(dc > dark) dark = dc; } else dc = 0; }\nif(c_t > p11) { dc = 0; bc += 1; if(bc > bright) bright = bc; }\nelse { bc = 0; if(ct < p11) { dc += 1; if(dc > dark) dark = dc; } else dc = 0; }\nif(bright < 7 && dark < 7) {\nif(bc > 0 && bc < 7) do {\nif(c_t > p0)           bc += 1; else break;\nif(c_t > p1 && bc < 7) bc += 1; else break;\nif(c_t > p2 && bc < 7) bc += 1; else break;\nif(c_t > p3 && bc < 7) bc += 1; else break;\nif(c_t > p4 && bc < 7) bc += 1; else break;\nif(c_t > p5 && bc < 7) bc += 1; else break;\n} while(false);\nif(dc > 0 && dc < 7) do {\nif(ct < p0)           dc += 1; else break;\nif(ct < p1 && dc < 7) dc += 1; else break;\nif(ct < p2 && dc < 7) dc += 1; else break;\nif(ct < p3 && dc < 7) dc += 1; else break;\nif(ct < p4 && dc < 7) dc += 1; else break;\nif(ct < p5 && dc < 7) dc += 1; else break;\n} while(false);\nif(bc >= 7 || dc >= 7)\ncolor = vec4(1.0f, pixel.gba);\n}\nelse {\ncolor = vec4(1.0f, pixel.gba);\n}\n}\n}\n}"},function(e,n){e.exports="uniform sampler2D image;\nuniform float threshold;\nvoid main()\n{\nivec2 thread = threadLocation();\nivec2 size = outputSize();\nvec4 pixel = threadPixel(image);\ncolor = vec4(0.0f, pixel.gba);\nif(\nthread.x >= 3 && thread.x < size.x - 3 &&\nthread.y >= 3 && thread.y < size.y - 3\n) {\nfloat t = clamp(threshold, 0.0f, 1.0f);\nfloat c = pixel.g;\nfloat ct = c + t, c_t = c - t;\nfloat p0 = pixelAtOffset(image, ivec2(0, 1)).g;\nfloat p1 = pixelAtOffset(image, ivec2(1, 1)).g;\nfloat p2 = pixelAtOffset(image, ivec2(1, 0)).g;\nfloat p3 = pixelAtOffset(image, ivec2(1, -1)).g;\nfloat p4 = pixelAtOffset(image, ivec2(0, -1)).g;\nfloat p5 = pixelAtOffset(image, ivec2(-1, -1)).g;\nfloat p6 = pixelAtOffset(image, ivec2(-1, 0)).g;\nfloat p7 = pixelAtOffset(image, ivec2(-1, 1)).g;\nbool possibleCorner =\n((c_t > p1 || c_t > p5) && (c_t > p3 || c_t > p7)) ||\n((ct < p1  || ct < p5)  && (ct < p3  || ct < p7))  ;\nif(possibleCorner) {\nint bright = 0, dark = 0, bc = 0, dc = 0;\nif(c_t > p0) { dc = 0; bc += 1; if(bc > bright) bright = bc; }\nelse { bc = 0; if(ct < p0) { dc += 1; if(dc > dark) dark = dc; } else dc = 0; }\nif(c_t > p1) { dc = 0; bc += 1; if(bc > bright) bright = bc; }\nelse { bc = 0; if(ct < p1) { dc += 1; if(dc > dark) dark = dc; } else dc = 0; }\nif(c_t > p2) { dc = 0; bc += 1; if(bc > bright) bright = bc; }\nelse { bc = 0; if(ct < p2) { dc += 1; if(dc > dark) dark = dc; } else dc = 0; }\nif(c_t > p3) { dc = 0; bc += 1; if(bc > bright) bright = bc; }\nelse { bc = 0; if(ct < p3) { dc += 1; if(dc > dark) dark = dc; } else dc = 0; }\nif(c_t > p4) { dc = 0; bc += 1; if(bc > bright) bright = bc; }\nelse { bc = 0; if(ct < p4) { dc += 1; if(dc > dark) dark = dc; } else dc = 0; }\nif(c_t > p5) { dc = 0; bc += 1; if(bc > bright) bright = bc; }\nelse { bc = 0; if(ct < p5) { dc += 1; if(dc > dark) dark = dc; } else dc = 0; }\nif(c_t > p6) { dc = 0; bc += 1; if(bc > bright) bright = bc; }\nelse { bc = 0; if(ct < p6) { dc += 1; if(dc > dark) dark = dc; } else dc = 0; }\nif(c_t > p7) { dc = 0; bc += 1; if(bc > bright) bright = bc; }\nelse { bc = 0; if(ct < p7) { dc += 1; if(dc > dark) dark = dc; } else dc = 0; }\nif(bright < 5 && dark < 5) {\nif(bc > 0 && bc < 5) do {\nif(c_t > p0)           bc += 1; else break;\nif(c_t > p1 && bc < 5) bc += 1; else break;\nif(c_t > p2 && bc < 5) bc += 1; else break;\nif(c_t > p3 && bc < 5) bc += 1; else break;\n} while(false);\nif(dc > 0 && dc < 5) do {\nif(ct < p0)           dc += 1; else break;\nif(ct < p1 && dc < 5) dc += 1; else break;\nif(ct < p2 && dc < 5) dc += 1; else break;\nif(ct < p3 && dc < 5) dc += 1; else break;\n} while(false);\nif(bc >= 5 || dc >= 5)\ncolor = vec4(1.0f, pixel.gba);\n}\nelse {\ncolor = vec4(1.0f, pixel.gba);\n}\n}\n}\n}"},function(e,n){e.exports="uniform sampler2D image;\nuniform float threshold;\nvoid main()\n{\nvec4 pixel = threadPixel(image);\nfloat ifCorner = step(1.0f, pixel.r);\nfloat t = clamp(threshold, 0.0f, 1.0f);\nfloat c = pixel.g;\nfloat ct = c + t, c_t = c - t;\nfloat p0 = pixelAtOffset(image, ivec2(0, 3)).g;\nfloat p1 = pixelAtOffset(image, ivec2(1, 3)).g;\nfloat p2 = pixelAtOffset(image, ivec2(2, 2)).g;\nfloat p3 = pixelAtOffset(image, ivec2(3, 1)).g;\nfloat p4 = pixelAtOffset(image, ivec2(3, 0)).g;\nfloat p5 = pixelAtOffset(image, ivec2(3, -1)).g;\nfloat p6 = pixelAtOffset(image, ivec2(2, -2)).g;\nfloat p7 = pixelAtOffset(image, ivec2(1, -3)).g;\nfloat p8 = pixelAtOffset(image, ivec2(0, -3)).g;\nfloat p9 = pixelAtOffset(image, ivec2(-1, -3)).g;\nfloat p10 = pixelAtOffset(image, ivec2(-2, -2)).g;\nfloat p11 = pixelAtOffset(image, ivec2(-3, -1)).g;\nfloat p12 = pixelAtOffset(image, ivec2(-3, 0)).g;\nfloat p13 = pixelAtOffset(image, ivec2(-3, 1)).g;\nfloat p14 = pixelAtOffset(image, ivec2(-2, 2)).g;\nfloat p15 = pixelAtOffset(image, ivec2(-1, 3)).g;\nfloat bs = 0.0f, ds = 0.0f;\nbs += max(c_t - p0, 0.0f);  ds += max(p0 - ct, 0.0f);\nbs += max(c_t - p1, 0.0f);  ds += max(p1 - ct, 0.0f);\nbs += max(c_t - p2, 0.0f);  ds += max(p2 - ct, 0.0f);\nbs += max(c_t - p3, 0.0f);  ds += max(p3 - ct, 0.0f);\nbs += max(c_t - p4, 0.0f);  ds += max(p4 - ct, 0.0f);\nbs += max(c_t - p5, 0.0f);  ds += max(p5 - ct, 0.0f);\nbs += max(c_t - p6, 0.0f);  ds += max(p6 - ct, 0.0f);\nbs += max(c_t - p7, 0.0f);  ds += max(p7 - ct, 0.0f);\nbs += max(c_t - p8, 0.0f);  ds += max(p8 - ct, 0.0f);\nbs += max(c_t - p9, 0.0f);  ds += max(p9 - ct, 0.0f);\nbs += max(c_t - p10, 0.0f); ds += max(p10 - ct, 0.0f);\nbs += max(c_t - p11, 0.0f); ds += max(p11 - ct, 0.0f);\nbs += max(c_t - p12, 0.0f); ds += max(p12 - ct, 0.0f);\nbs += max(c_t - p13, 0.0f); ds += max(p13 - ct, 0.0f);\nbs += max(c_t - p14, 0.0f); ds += max(p14 - ct, 0.0f);\nbs += max(c_t - p15, 0.0f); ds += max(p15 - ct, 0.0f);\nfloat score = max(bs, ds) / 16.0f;\ncolor = vec4(score * ifCorner, pixel.g, score, pixel.a);\n}"},function(e,n){e.exports="uniform sampler2D image;\nuniform float threshold;\nvoid main()\n{\nvec4 pixel = threadPixel(image);\nfloat ifCorner = step(1.0f, pixel.r);\nfloat t = clamp(threshold, 0.0f, 1.0f);\nfloat c = pixel.g;\nfloat ct = c + t, c_t = c - t;\nfloat p0 = pixelAtOffset(image, ivec2(0, 2)).g;\nfloat p1 = pixelAtOffset(image, ivec2(1, 2)).g;\nfloat p2 = pixelAtOffset(image, ivec2(2, 1)).g;\nfloat p3 = pixelAtOffset(image, ivec2(2, 0)).g;\nfloat p4 = pixelAtOffset(image, ivec2(2, -1)).g;\nfloat p5 = pixelAtOffset(image, ivec2(1, -2)).g;\nfloat p6 = pixelAtOffset(image, ivec2(0, -2)).g;\nfloat p7 = pixelAtOffset(image, ivec2(-1, -2)).g;\nfloat p8 = pixelAtOffset(image, ivec2(-2, -1)).g;\nfloat p9 = pixelAtOffset(image, ivec2(-2, 0)).g;\nfloat p10 = pixelAtOffset(image, ivec2(-2, 1)).g;\nfloat p11 = pixelAtOffset(image, ivec2(-1, 2)).g;\nfloat bs = 0.0f, ds = 0.0f;\nbs += max(c_t - p0, 0.0f);  ds += max(p0 - ct, 0.0f);\nbs += max(c_t - p1, 0.0f);  ds += max(p1 - ct, 0.0f);\nbs += max(c_t - p2, 0.0f);  ds += max(p2 - ct, 0.0f);\nbs += max(c_t - p3, 0.0f);  ds += max(p3 - ct, 0.0f);\nbs += max(c_t - p4, 0.0f);  ds += max(p4 - ct, 0.0f);\nbs += max(c_t - p5, 0.0f);  ds += max(p5 - ct, 0.0f);\nbs += max(c_t - p6, 0.0f);  ds += max(p6 - ct, 0.0f);\nbs += max(c_t - p7, 0.0f);  ds += max(p7 - ct, 0.0f);\nbs += max(c_t - p8, 0.0f);  ds += max(p8 - ct, 0.0f);\nbs += max(c_t - p9, 0.0f);  ds += max(p9 - ct, 0.0f);\nbs += max(c_t - p10, 0.0f); ds += max(p10 - ct, 0.0f);\nbs += max(c_t - p11, 0.0f); ds += max(p11 - ct, 0.0f);\nfloat score = max(bs, ds) / 12.0f;\ncolor = vec4(score * ifCorner, pixel.g, score, pixel.a);\n}"},function(e,n){e.exports="uniform sampler2D image;\nuniform float threshold;\nvoid main()\n{\nvec4 pixel = threadPixel(image);\nfloat ifCorner = step(1.0f, pixel.r);\nfloat t = clamp(threshold, 0.0f, 1.0f);\nfloat c = pixel.g;\nfloat ct = c + t, c_t = c - t;\nfloat p0 = pixelAtOffset(image, ivec2(0, 1)).g;\nfloat p1 = pixelAtOffset(image, ivec2(1, 1)).g;\nfloat p2 = pixelAtOffset(image, ivec2(1, 0)).g;\nfloat p3 = pixelAtOffset(image, ivec2(1, -1)).g;\nfloat p4 = pixelAtOffset(image, ivec2(0, -1)).g;\nfloat p5 = pixelAtOffset(image, ivec2(-1, -1)).g;\nfloat p6 = pixelAtOffset(image, ivec2(-1, 0)).g;\nfloat p7 = pixelAtOffset(image, ivec2(-1, 1)).g;\nfloat bs = 0.0f, ds = 0.0f;\nbs += max(c_t - p0, 0.0f); ds += max(p0 - ct, 0.0f);\nbs += max(c_t - p1, 0.0f); ds += max(p1 - ct, 0.0f);\nbs += max(c_t - p2, 0.0f); ds += max(p2 - ct, 0.0f);\nbs += max(c_t - p3, 0.0f); ds += max(p3 - ct, 0.0f);\nbs += max(c_t - p4, 0.0f); ds += max(p4 - ct, 0.0f);\nbs += max(c_t - p5, 0.0f); ds += max(p5 - ct, 0.0f);\nbs += max(c_t - p6, 0.0f); ds += max(p6 - ct, 0.0f);\nbs += max(c_t - p7, 0.0f); ds += max(p7 - ct, 0.0f);\nfloat score = max(bs, ds) / 8.0f;\ncolor = vec4(score * ifCorner, pixel.g, score, pixel.a);\n}"},function(e,n){e.exports="uniform sampler2D image;\nvoid main()\n{\nfloat p0 = pixelAtOffset(image, ivec2(0, 1)).r;\nfloat p1 = pixelAtOffset(image, ivec2(1, 1)).r;\nfloat p2 = pixelAtOffset(image, ivec2(1, 0)).r;\nfloat p3 = pixelAtOffset(image, ivec2(1, -1)).r;\nfloat p4 = pixelAtOffset(image, ivec2(0, -1)).r;\nfloat p5 = pixelAtOffset(image, ivec2(-1, -1)).r;\nfloat p6 = pixelAtOffset(image, ivec2(-1, 0)).r;\nfloat p7 = pixelAtOffset(image, ivec2(-1, 1)).r;\nfloat m = max(\nmax(max(p0, p1), max(p2, p3)),\nmax(max(p4, p5), max(p6, p7))\n);\nvec4 pixel = threadPixel(image);\nfloat score = float(pixel.r >= m) * pixel.r;\ncolor = vec4(score, pixel.gba);\n}"},function(e,n){e.exports="uniform sampler2D image, layerA, layerB;\nuniform float scaleA, scaleB, lgM, h;\nvoid main()\n{\nvec4 pixel = threadPixel(image);\nfloat score = pixel.r;\nivec2 zero = ivec2(0, 0);\nivec2 sizeA = textureSize(layerA, 0);\nivec2 sizeB = textureSize(layerB, 0);\nvec2 mid = (texCoord * texSize) + vec2(0.5f, 0.5f);\nivec2 pa = clamp(ivec2(ceil(mid * scaleA - 1.0f)), zero, sizeA - 2);\nivec2 pb = clamp(ivec2(ceil(mid * scaleB - 1.0f)), zero, sizeB - 2);\nvec4 a00 = pixelAt(layerA, pa);\nvec4 a10 = pixelAt(layerA, pa + ivec2(1, 0));\nvec4 a01 = pixelAt(layerA, pa + ivec2(0, 1));\nvec4 a11 = pixelAt(layerA, pa + ivec2(1, 1));\nvec4 b00 = pixelAt(layerB, pb);\nvec4 b10 = pixelAt(layerB, pb + ivec2(1, 0));\nvec4 b01 = pixelAt(layerB, pb + ivec2(0, 1));\nvec4 b11 = pixelAt(layerB, pb + ivec2(1, 1));\nfloat maxScore = max(\nmax(max(a00.r, a10.r), max(a01.r, a11.r)),\nmax(max(b00.r, b10.r), max(b01.r, b11.r))\n);\ncolor = vec4(0.0f, pixel.gba);\nif(score < maxScore || score == 0.0f)\nreturn;\nvec2 ea = fract(mid * scaleA);\nvec2 eb = fract(mid * scaleB);\nfloat isa = a00.b * (1.0f - ea.x) * (1.0f - ea.y) +\na10.b * ea.x * (1.0f - ea.y) +\na01.b * (1.0f - ea.x) * ea.y +\na11.b * ea.x * ea.y;\nfloat isb = b00.b * (1.0f - eb.x) * (1.0f - eb.y) +\nb10.b * eb.x * (1.0f - eb.y) +\nb01.b * (1.0f - eb.x) * eb.y +\nb11.b * eb.x * eb.y;\nbool cond1 = (isa > score && isa > isb);\nbool cond2 = (isb > score && isb > isa);\ncolor = mix(\nmix(\npixel,\nvec4(isb, pixel.gb, b00.a),\nbvec4(cond2, cond2, cond2, cond2)\n),\nvec4(isa, pixel.gb, a00.a),\nbvec4(cond1, cond1, cond1, cond1)\n);\nfloat y1 = isa, y2 = isb, y3 = score;\nfloat x1 = lgM - (lgM + h) * a00.a;\nfloat x2 = lgM - (lgM + h) * b00.a;\nfloat x3 = lgM - (lgM + h) * pixel.a;\nfloat dn = (x1 - x2) * (x1 - x3) * (x2 - x3);\nif(abs(dn) < 0.00001f)\nreturn;\nfloat a = (x3 * (y2 - y1) + x2 * (y1 - y3) + x1 * (y3 - y2)) / dn;\nif(a >= 0.0f)\nreturn;\nfloat b = (x3 * x3 * (y1 - y2) + x2 * x2 * (y3 - y1) + x1 * x1 * (y2 - y3)) / dn;\nfloat c = (x2 * x3 * (x2 - x3) * y1 + x3 * x1 * (x3 - x1) * y2 + x1 * x2 * (x1 - x2) * y3) / dn;\nfloat xv = -b / (2.0f * a);\nfloat yv = c - (b * b) / (4.0f * a);\nif(xv < min(x1, min(x2, x3)) || xv > max(x1, max(x2, x3)))\nreturn;\nfloat interpolatedScale = (lgM - xv) / (lgM + h);\nfloat interpolatedScore = clamp(yv, 0.0f, 1.0f);\ncolor = vec4(interpolatedScore, pixel.gb, interpolatedScale);\n}"},function(e,n){e.exports="uniform sampler2D image;\nuniform ivec2 imageSize;\nuniform int maxIterations;\nvoid main()\n{\nvec4 pixel = threadPixel(image);\nivec2 pos = threadLocation();\nint offset = -1;\nwhile(offset < maxIterations && pos.y < imageSize.y && pixelAt(image, pos).r == 0.0f) {\n++offset;\npos.x = (pos.x + 1) % imageSize.x;\npos.y += int(pos.x == 0);\n}\ncolor = vec4(pixel.rg, float(max(0, offset)) / 255.0f, pixel.a);\n}"},function(e,n){e.exports="uniform sampler2D image;\nuniform ivec2 imageSize;\nuniform int encoderLength;\nuniform int descriptorSize;\nbool findQthKeypoint(int q, out ivec2 position, out vec4 pixel)\n{\nint i = 0, p = 0;\nfor(position = ivec2(0, 0); position.y < imageSize.y; ) {\npixel = pixelAt(image, position);\nif(pixel.r > 0.0f) {\nif(p++ == q)\nreturn true;\n}\ni += 1 + int(pixel.b * 255.0f);\nposition = ivec2(i % imageSize.x, i / imageSize.x);\n}\nreturn false;\n}\nvoid main()\n{\nvec4 pixel;\nivec2 position;\nivec2 thread = threadLocation();\nint p = encoderLength * thread.y + thread.x;\nint d = 2 + descriptorSize / 4;\nint q = p / d;\ncolor = vec4(1.0f, 1.0f, 1.0f, 1.0f);\nif(findQthKeypoint(q, position, pixel)) {\nint r = p % d;\nswitch(r) {\ncase 0: {\nivec2 lo = position & 255;\nivec2 hi = position >> 8;\ncolor = vec4(float(lo.x), float(hi.x), float(lo.y), float(hi.y)) / 255.0f;\nbreak;\n}\ncase 1: {\nfloat scale = pixel.a;\nfloat rotation = 0.0f;\ncolor = vec4(scale, rotation, 0.0f, 0.0f);\nbreak;\n}\ndefault: {\nint i = r - 2;\nbreak;\n}\n}\n}\n}"},function(e,n){e.exports="uniform sampler2D image;\nvoid main()\n{\nivec2 thread = threadLocation();\nvec4 pixel = pixelAt(image, thread / 2);\nbool cond = (((thread.x + thread.y) & 1) == 0);\ncolor = mix(\nvec4(0.0f, 0.0f, 0.0f, pixel.a),\npixel,\nbvec4(cond, cond, cond, cond)\n);\n}"},function(e,n){e.exports="uniform sampler2D image;\nvoid main()\n{\nivec2 thread = threadLocation();\nivec2 pos = min(thread * 2, textureSize(image, 0) - 1);\ncolor = pixelAt(image, pos);\n}"},function(e,n){e.exports="uniform sampler2D image;\nvoid main()\n{\nivec2 thread = threadLocation();\nvec4 pixel = pixelAt(image, thread / 3);\nbool cond = ((thread.x - (thread.y % 3) + 3) % 3) == 0;\ncolor = mix(\nvec4(0.0f, 0.0f, 0.0f, pixel.a),\npixel,\nbvec4(cond, cond, cond, cond)\n);\n}"},function(e,n){e.exports="uniform sampler2D image;\nvoid main()\n{\nivec2 thread = threadLocation();\nivec2 pos = min(thread * 3, textureSize(image, 0) - 1);\ncolor = pixelAt(image, pos);\n}"},function(e,n){e.exports="uniform sampler2D target;\nuniform sampler2D source;\nvoid main()\n{\nvec4 a = threadPixel(target);\nvec4 b = threadPixel(source);\nbool cond = (b.r > a.r);\ncolor = mix(\na,\nvec4(b.r, a.gb, b.a),\nbvec4(cond, cond, cond, cond)\n);\n}"},function(e,n){e.exports="uniform sampler2D largerImage;\nuniform sampler2D smallerImage;\nvoid main()\n{\nivec2 thread = threadLocation();\nvec4 lg = pixelAt(largerImage, min(thread, textureSize(largerImage, 0) - 1));\nvec4 sm = pixelAt(smallerImage, min(thread / 2, textureSize(smallerImage, 0) - 1));\nbool cond = (((thread.x & 1) + (thread.y & 1)) == 0) && (sm.r > lg.r);\ncolor = mix(\nlg,\nvec4(sm.r, lg.gb, sm.a),\nbvec4(cond, cond, cond, cond)\n);\n}"},function(e,n){e.exports="uniform sampler2D image;\nuniform float imageScale;\n#define B2(expr) bvec2((expr),(expr))\nvoid main()\n{\nivec2 thread = threadLocation();\nivec2 size = outputSize();\nivec2 scaled = ivec2((texCoord * texSize) * imageScale);\nivec2 imageSize = textureSize(image, 0);\nvec4 pixel = threadPixel(image);\nvec4 p0 = pixelAt(image, min(scaled, imageSize-1));\nvec4 p1 = pixelAt(image, min(scaled + ivec2(0, 1), imageSize-1));\nvec4 p2 = pixelAt(image, min(scaled + ivec2(1, 0), imageSize-1));\nvec4 p3 = pixelAt(image, min(scaled + ivec2(1, 1), imageSize-1));\nbool gotCorner = ((thread.x & 1) + (thread.y & 1) == 0) &&\n(scaled.x + 1 < size.x && scaled.y + 1 < size.y) &&\n(p0.r + p1.r + p2.r + p3.r > 0.0f);\nvec2 best = mix(\nvec2(0.0f, pixel.a),\nmix(\nmix(\nmix(p3.ra, p1.ra, B2(p1.r > p3.r)),\nmix(p2.ra, p1.ra, B2(p1.r > p2.r)),\nB2(p2.r > p3.r)\n),\nmix(\nmix(p3.ra, p0.ra, B2(p0.r > p3.r)),\nmix(p2.ra, p0.ra, B2(p0.r > p2.r)),\nB2(p2.r > p3.r)\n),\nB2(p0.r > p1.r)\n),\nB2(gotCorner)\n);\ncolor = vec4(best.x, pixel.gb, best.y);\n}"},function(e,n){e.exports="uniform sampler2D image;\nvoid main()\n{\nivec2 thread = threadLocation();\nivec2 size = outputSize();\nivec2 zero = ivec2(0, 0);\ncolor = pixelAt(image, clamp(thread, zero, size - 1));\n}"},function(e,n,t){"use strict";t.r(n),t.d(n,"load",(function(){return be})),t.d(n,"camera",(function(){return ve})),t.d(n,"pipeline",(function(){return ye})),t.d(n,"version",(function(){return we})),t.d(n,"fps",(function(){return Ae}));class i extends Error{constructor(e){super("[GLError] "+e),this.name=this.constructor.name}}class c{static Error(e){return new i(e)}static createShader(e,n,t){const i=e.createShader(n);return e.shaderSource(i,t),e.compileShader(i),i}static createProgram(e,n,t){const i=e.createProgram(),s=c.createShader(e,e.VERTEX_SHADER,n),l=c.createShader(e,e.FRAGMENT_SHADER,t);if(e.attachShader(i,s),e.attachShader(i,l),e.linkProgram(i),!e.getProgramParameter(i,e.LINK_STATUS)){const n=[e.getShaderInfoLog(l),e.getShaderInfoLog(s),e.getProgramInfoLog(i)],r=e=>Math.max(0,2-Math.floor(Math.log10(e))),a=e=>Array(r(e)).fill(" ").join("")+e+". ",f=t.split("\n").map((e,n)=>a(1+n)+e).join("\n");throw e.deleteProgram(i),e.deleteShader(l),e.deleteShader(s),c.Error("Can't create shader program.\n\n---------- ERROR ----------\n"+n.join("\n")+"\n\n---------- SOURCE CODE ----------\n"+f)}return i}static createTexture(e,n,t,i=null){const c=e.createTexture();return null===i&&(i=e.RGBA8),e.bindTexture(e.TEXTURE_2D,c),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MIN_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_MAG_FILTER,e.NEAREST),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_S,e.MIRRORED_REPEAT),e.texParameteri(e.TEXTURE_2D,e.TEXTURE_WRAP_T,e.MIRRORED_REPEAT),e.texStorage2D(e.TEXTURE_2D,1,i,n,t),e.bindTexture(e.TEXTURE_2D,null),c}static destroyTexture(e,n){return e.deleteTexture(n),null}static uploadToTexture(e,n,t){return e.bindTexture(e.TEXTURE_2D,n),e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,t),e.bindTexture(e.TEXTURE_2D,null),n}static bindTextures(e,n,t){const i=Object.keys(n);if(i.length>e.MAX_COMBINED_TEXTURE_IMAGE_UNITS)throw c.Error(`Can't bind ${i.length} textures to a program: max is ${e.MAX_COMBINED_TEXTURE_IMAGE_UNITS}`);for(let c=0;c<i.length;c++)e.activeTexture(e.TEXTURE0+c),e.bindTexture(e.TEXTURE_2D,n[i[c]]),e.uniform1i(t[i[c]],c)}static createFramebuffer(e,n){const t=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,t),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const i=e.checkFramebufferStatus(e.FRAMEBUFFER);if(i!=e.FRAMEBUFFER_COMPLETE){const n=["FRAMEBUFFER_UNSUPPORTED","FRAMEBUFFER_INCOMPLETE_ATTACHMENT","FRAMEBUFFER_INCOMPLETE_DIMENSIONS","FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT","FRAMEBUFFER_INCOMPLETE_MULTISAMPLE"].filter(n=>e[n]===i)[0]||"unknown error";throw c.Error(`Can't create framebuffer: ${n} (${i})`)}return e.bindFramebuffer(e.FRAMEBUFFER,null),t}static destroyFramebuffer(e,n){return e.deleteFramebuffer(n),null}}class s{static run(e,n){return s._includeRegex=s._includeRegex||(s._includeRegex=/^\s*@\s*include\s+"(.*?)"/gm),s._commentsRegex=s._commentsRegex||(s._commentsRegex=[/\/\*(.|\s)*?\*\//g,/\/\/.*$/gm]),String(n).replace(s._commentsRegex[0],"").replace(s._commentsRegex[1],"").replace(s._includeRegex,(e,n)=>function(e,n){if(String(n).match(/^[a-zA-Z0-9_\-]+\.glsl$/))return t(0)("./"+n);throw c.Error(`Shader preprocessor: can't read file "${n}"`)}(0,n))}}const l={sampler2D:"uniform1i",float:"uniform1f",int:"uniform1i",uint:"uniform1ui",bool:"uniform1i",vec2:"uniform2f",vec3:"uniform3f",vec4:"uniform4f",ivec2:"uniform2i",ivec3:"uniform3i",ivec4:"uniform4i",uvec2:"uniform2ui",uvec3:"uniform3ui",uvec4:"uniform4ui",bvec2:"uniform2i",bvec3:"uniform3i",bvec4:"uniform4i"};class r extends Function{constructor(e,n,t={}){return super("...args","return this._self._call(...args)"),this._self=this.bind(this),this._self._init(e,n,t),this._self}resize(e,n){const t=this._gl,i=this._options;if(e===this._stdprog.width&&n===this._stdprog.height)return;e=Math.max(1,0|e),n=Math.max(1,0|n),i.output[0]=e,i.output[1]=n,i.renderToTexture&&(this._stdprog=function(e){e.hasOwnProperty("fbo")&&(c.destroyFramebuffer(e.gl,e.fbo),delete e.fbo);e.hasOwnProperty("texture")&&(c.destroyTexture(e.gl,e.texture),delete e.texture);return e}(this._stdprog)),this._stdprog.width=e,this._stdprog.height=n,i.renderToTexture&&(this._stdprog=f(this._stdprog));const s=this._stdprog.uniform.texSize;t[l[s.type]](s.location,e,n),null!==this._pixels&&this._pixels.length<e*n*4&&(this._pixels=null)}readPixelsSync(e=0,n=0,t=-1,i=-1){const c=this._gl,s=this._pixels||(this._pixels=new Uint8Array(this._stdprog.width*this._stdprog.height*4));return t<0&&(t=this._stdprog.width),i<0&&(i=this._stdprog.height),t=Math.min(t,this._stdprog.width),i=Math.min(i,this._stdprog.height),e=Math.max(0,Math.min(e,t-1)),n=Math.max(0,Math.min(n,i-1)),this._stdprog.hasOwnProperty("fbo")?(c.bindFramebuffer(c.FRAMEBUFFER,this._stdprog.fbo),c.readPixels(e,n,t,i,c.RGBA,c.UNSIGNED_BYTE,s),c.bindFramebuffer(c.FRAMEBUFFER,null)):c.readPixels(e,n,t,i,c.RGBA,c.UNSIGNED_BYTE,s),this._pixels}get gl(){return this._gl}get uniforms(){return this._stdprog.uniform}_init(e,n,t){t={output:[e.drawingBufferWidth,e.drawingBufferHeight],uniforms:{},renderToTexture:!0,recycleTexture:!0,...t};let i=Math.max(1,0|t.output[0]),r=Math.max(1,0|t.output[1]);t.output=[i,r];const o=e.canvas;i>o.width&&(o.width=i),r>o.height&&(o.height=r);const p=n();let h=function(e,n,t,i,r={}){const f=s.run(e,'#version 300 es\nprecision highp float;\nprecision highp int;\nprecision highp sampler2D;\n \nout vec4 color;\nin vec2 texCoord;\nuniform vec2 texSize;\n\n@include "global.glsl"\n'+i),o=c.createProgram(e,"#version 300 es\nin vec2 a_position;\nin vec2 a_texCoord;\nout vec2 texCoord;\n \nvoid main() {\n    gl_Position = vec4(a_position, 0, 1);\n    texCoord = a_texCoord;\n}",f);e.bindAttribLocation(o,0,"a_position"),e.bindAttribLocation(o,1,"a_texCoord");const p=a(e);n=Math.max(0|n,1),t=Math.max(0|t,1),r.texSize=[n,t];const h=function(e){const n=e,t=/uniform\s+(\w+)\s+([^;]+)/g,i={};let s;for(;null!==(s=t.exec(n));){const e=s[1],n=s[2].split(",").map(e=>e.trim()).filter(e=>e);for(const t of n)if(t.endsWith("]")){if(!(s=t.match(/(\w+)\s*\[\s*(\d+)\s*\]$/)))throw c.Error(`Unspecified array length for uniform "${t}" in the shader`);const[n,l]=[s[1],Number(s[2])];for(let t=0;t<l;t++)i[`${n}[${t}]`]={type:e}}else i[t]={type:e}}return Object.freeze(i)}(f);e.useProgram(o);for(const n in h){if(h[n].location=e.getUniformLocation(o,n),!l.hasOwnProperty(h[n].type))throw c.Error("Unknown uniform type: "+h[n].type);if(r.hasOwnProperty(n)){const t=r[n];if("number"==typeof t||"boolean"==typeof t)e[l[h[n].type]](h[n].location,t);else{if("object"!=typeof t)throw c.Error(`Unrecognized uniform value: "${t}"`);e[l[h[n].type]](h[n].location,...Array.from(t))}}}return{program:o,gl:e,uniform:h,width:n,height:t,...p}}(e,i,r,p,t.uniforms);t.renderToTexture&&(h=f(h));const _=function(e){const n=e.toString(),t=n.startsWith("function")?"function\\s.*\\(([^)]*)\\)":n.startsWith("(")?"\\(([^)]*)\\).*=>":"([^=]+).*=>",i=new RegExp(t).exec(n);if(null!==i){return i[1].replace(/\/\*.*?\*\//g,"").split(",").map(e=>e.replace(/=.*$/,"").trim()).filter(e=>e)}throw c.Error("Can't detect function arguments of "+n)}(n);for(let e=0;e<_.length;e++)if(!h.uniform.hasOwnProperty(_[e])&&!h.uniform.hasOwnProperty(_[e]+"[0]"))throw c.Error(`Can't run shader: expected uniform "${_[e]}"`);this._gl=e,this._source=p,this._options=t,this._stdprog=h,this._params=_,this._pixels=null}_call(...e){const n=this._gl,t=this._options,i=this._stdprog,s=this._params;if(e.length!=s.length)throw c.Error("Can't run shader: incorrect number of arguments");n.useProgram(i.program);for(let n=0,t=0;n<e.length;n++){const l=s[n];let r=i.uniform[l];if(r)t=this._setUniform(r,e[n],t);else{if(!i.uniform.hasOwnProperty(l+"[0]"))throw c.Error(`Can't run shader: unknown parameter "${l}": ${e[n]}`);{const s=e[n];if(i.uniform.hasOwnProperty(`${l}[${s.length}]`))throw c.Error(`Can't run shader: too few elements in array "${l}"`);for(let e=0;r=i.uniform[`${l}[${e}]`];e++)t=this._setUniform(r,s[e],t)}}}t.renderToTexture?n.bindFramebuffer(n.FRAMEBUFFER,i.fbo):n.bindFramebuffer(n.FRAMEBUFFER,null),n.viewport(0,0,i.width,i.height),n.drawArrays(n.TRIANGLE_STRIP,0,4);let l=null;if(t.renderToTexture&&(l=i.texture,!t.recycleTexture)){const e=c.createTexture(n,i.width,i.height);n.activeTexture(n.TEXTURE0),n.bindTexture(n.TEXTURE_2D,e),n.copyTexSubImage2D(n.TEXTURE_2D,0,0,0,0,0,i.width,i.height),n.bindTexture(n.TEXTURE_2D,null),l=e}return n.bindFramebuffer(n.FRAMEBUFFER,null),l}_setUniform(e,n,t){const i=this._gl;if("sampler2D"==e.type){if(t>i.MAX_COMBINED_TEXTURE_IMAGE_UNITS)throw c.Error(`Can't bind ${t} textures to a program: max is ${i.MAX_COMBINED_TEXTURE_IMAGE_UNITS}`);if(n===this._stdprog.texture)throw c.Error("Can't run shader: cannot use its output texture as an input to itself");i.activeTexture(i.TEXTURE0+t),i.bindTexture(i.TEXTURE_2D,n),i.uniform1i(e.location,t),t++}else if("number"==typeof n||"boolean"==typeof n)i[l[e.type]](e.location,n);else{if(!Array.isArray(n))throw c.Error(`Can't run shader: unrecognized argument "${n}"`);i[l[e.type]](e.location,...n)}return t}}function a(e){const n=a,t=n._cache||(n._cache=new WeakMap);if(t.has(e))return t.get(e);const i=e.createVertexArray(),c=[e.createBuffer(),e.createBuffer()];e.bindVertexArray(i),e.bindBuffer(e.ARRAY_BUFFER,c[0]),e.bufferData(e.ARRAY_BUFFER,new Float32Array([-1,-1,1,-1,-1,1,1,1]),e.STATIC_DRAW),e.vertexAttribPointer(0,2,e.FLOAT,!1,0,0),e.enableVertexAttribArray(0),e.bindBuffer(e.ARRAY_BUFFER,c[1]),e.bufferData(e.ARRAY_BUFFER,new Float32Array([0,0,1,0,0,1,1,1]),e.STATIC_DRAW),e.vertexAttribPointer(1,2,e.FLOAT,!1,0,0),e.enableVertexAttribArray(1),e.bindBuffer(e.ARRAY_BUFFER,null);const s={vao:i,vbo:c};return t.set(e,s),s}function f(e){const n=e.gl,t=e.width,i=e.height,s=c.createTexture(n,t,i),l=c.createFramebuffer(n,s);return Object.assign(e,{texture:s,fbo:l})}class o extends Error{constructor(e,...n){const t=[e,...n].join(" ");console.error("[speedy-vision.js]",t),super(t)}get name(){return this.constructor.name}}class p{static fatal(e,...n){throw new o(e,...n)}static warning(e,...n){const t=[e,...n].join(" ");return console.warn("[speedy-vision.js]",t),t}static log(e,...n){const t=[e,...n].join(" ");return console.log("[speedy-vision.js]",t),t}static assert(e,n=""){if(!e)throw new o("Assertion failed.",n)}static enum(...e){return Object.freeze(e.reduce((e,n)=>(e[n]=Symbol(n),e),{}))}static gaussianNoise(e=0,n=1){const t=2*Math.PI;let i,c=Math.random();do{i=Math.random()}while(i<=Number.EPSILON);return Math.sqrt(-2*Math.log(i))*Math.sin(t*c)*n+e}}class h{constructor(e,n){this._width=Math.max(0|e,1),this._height=Math.max(0|n,1),this._canvas=function(e,n){if("function"==typeof importScripts&&"undefined"!=typeof WorkerGlobalScope){if("function"!=typeof OffscreenCanvas)throw c.Error("OffscreenCanvas is not available in your browser. Please upgrade.");return new OffscreenCanvas(e,n)}{const t=document.createElement("canvas");return t.width=e,t.height=n,t}}(this._width,this._height),this._gl=_(this._canvas),this._inputTexture=null}get gl(){return this._gl}get canvas(){return this._canvas}get width(){return this._width}get height(){return this._height}upload(e,n=-1,t=-1){const i=this._gl;if(i.isContextLost())return p.warning("Lost WebGL context"),this._gl=_(this._canvas),this._inputTexture=null,upload(e,n,t);if(n<0&&(n=i.canvas.width),t<0&&(t=i.canvas.height),0==n||0==t)throw c.Error("Can't upload an image of area 0");if(null===this._inputTexture)i.canvas.width=Math.max(i.canvas.width,n),i.canvas.height=Math.max(i.canvas.height,t),this._inputTexture=c.createTexture(i,i.canvas.width,i.canvas.height);else if(n>i.canvas.width||t>i.canvas.height)return p.warning(`Resizing input texture to ${n} x ${t}`),this._inputTexture=c.destroyTexture(i,inputTexture),upload(e,n,t);return c.uploadToTexture(i,this._inputTexture,e),this._inputTexture}createProgram(e,n={}){const t=this._gl;return new r(t,e,{output:[t.canvas.width,t.canvas.height],...n})}clearCanvas(){const e=this._gl;e.bindFramebuffer(e.FRAMEBUFFER,null),e.viewport(0,0,e.drawingBufferWidth,e.drawingBufferHeight),e.clearColor(0,0,0,1),e.clear(e.COLOR_BUFFER_BIT)}}function _(e){const n=e.getContext("webgl2",{premultipliedAlpha:!1,preserveDrawingBuffer:!1,preferLowPowerToHighPerformance:!1,alpha:!0,antialias:!1,depth:!1,stencil:!1});if(!n)throw c.Error("WebGL2 is not available in your browser. Please upgrade.");return n}class d{constructor(e,n,t){this._gpu=e,this._width=n,this._height=t}declare(e,n,t={}){return Object.defineProperty(this,e,{get:(()=>{const i="__k_"+e;return function(){return this[i]||(this[i]=this._spawnKernel(n,t))}.bind(this)})()}),this}compose(e,...n){return Object.defineProperty(this,e,{get:(()=>{const t="__c_"+e;return function(){return this[t]||(this[t]=2==n.length?(()=>(n=n.map(e=>this[e]),function(e,...t){return n[1](n[0](e,...t),...t)}))():3==n.length?(()=>(n=n.map(e=>this[e]),function(e,...t){return n[2](n[1](n[0](e,...t),...t),...t)}))():4==n.length?(()=>(n=n.map(e=>this[e]),function(e,...t){return n[3](n[2](n[1](n[0](e,...t),...t),...t),...t)}))():(()=>(n=n.map(e=>this[e]),function(e,...t){return n.reduce((e,n)=>n(e,...t),e)}))())}.bind(this)})()}),this}get operation(){return this._helpers||(this.helpers={hasTextureSize:(e,n)=>({output:[0|e,0|n]}),displaysGraphics:()=>({renderToTexture:!1}),doesNotRecycleTextures:()=>({recycleTexture:!1})})}_spawnKernel(e,n={}){return this._gpu.core.createProgram(e,{output:[this._width,this._height],...n})}}const g=e=>t(2),x=e=>t(3);const u=e=>t(4);const m=(e,n)=>[].concat(...e.map(e=>n.map(n=>[e,n]))),b=e=>[...Array(2*e+1).keys()].map(n=>n-e);function v(e,n=1){return w("x",e,n)}function y(e,n=1){return w("y",e,n)}function w(e,n,t){const i=new Float32Array(n.map(e=>+e*+t)),c=i.length,s=c/2|0;c<1||c%2==0?p.fatal("Can't perform a 1D convolution with an invalid kSize of "+c):"x"!=e&&"y"!=e&&p.fatal(`Can't perform 1D convolution: invalid axis "${e}"`);const l=`\n    uniform sampler2D image;\n\n    void main()\n    {\n        float alpha = threadPixel(image).a;\n        vec4 pixel = vec4(0.0f, 0.0f, 0.0f, 0.0f);\n\n        ${r=(n,t)=>"x"==e?`\n        pixel += pixelAtOffset(image, ivec2(${0|t}, 0)) * float(${+n});\n    `:`\n        pixel += pixelAtOffset(image, ivec2(0, ${0|t})) * float(${+n});\n    `,b(s).reduce((e,n)=>e+r(i[n+s],n),"")}\n\n        color = vec4(pixel.rgb, alpha);\n    }\n    `;var r;return e=>l}function A(e){((e|=0)<1||e%2==0)&&p.fatal("Can't create a 2D texture kernel of size "+e);const n=`\n    uniform float kernel[${e*e}];\n\n    void main()\n    {\n        ivec2 thread = threadLocation();\n        float val = kernel[(${e}) * thread.y + thread.x];\n\n        float e0 = floor(val);\n        float e1 = 256.0f * fract(val);\n        float e2 = 256.0f * fract(e1);\n        float e3 = 256.0f * fract(e2);\n\n        color = vec4(e0, floor(e1) / 256.0f, floor(e2) / 256.0f, floor(e3) / 256.0f);\n    }\n    `;return e=>n}function S(e){((e|=0)<1||e%2==0)&&p.fatal("Can't create a 1D texture kernel of size "+e);const n=`\n    uniform float kernel[${e}];\n\n    void main()\n    {\n        ivec2 thread = threadLocation();\n        float val = kernel[thread.x];\n\n        float e0 = floor(val);\n        float e1 = 256.0f * fract(val);\n        float e2 = 256.0f * fract(e1);\n        float e3 = 256.0f * fract(e2);\n\n        color = vec4(e0, floor(e1) / 256.0f, floor(e2) / 256.0f, floor(e3) / 256.0f);\n    }\n    `;return e=>n}function T(e){const n=e>>1;(e<1||e%2==0)&&p.fatal("Can't perform a texture-based 2D convolution with an invalid kernel size of "+e);const t=`\n    const vec4 magic = vec4(1.0f, 1.0f, 1.0f / 256.0f, 1.0f / 65536.0f);\n    uniform sampler2D image, texKernel;\n    uniform float scale, offset;\n\n    void main()\n    {\n        vec4 kernel = vec4(0.0f, 0.0f, 0.0f, 0.0f);\n        vec4 result = vec4(0.0f, 0.0f, 0.0f, 0.0f);\n        float alpha = threadPixel(image).a;\n        float value = 0.0f;\n\n        ${i=(e,t)=>`\n        kernel = pixelAt(texKernel, ivec2(${e+n}, ${t+n}));\n        value = dot(kernel, magic) * scale + offset;\n        result += pixelAtOffset(image, ivec2(${e}, ${t})) * value;\n    `,m(b(n),b(n)).map(e=>i(e[0],e[1])).join("\n")}\n\n        result = clamp(result, 0.0f, 1.0f);\n        color = vec4(result.rgb, alpha);\n    }\n    `;var i;return(e,n,i,c)=>t}const k=e=>M(e,"x"),O=e=>M(e,"y");function M(e,n){const t=e>>1;e<1||e%2==0?p.fatal("Can't perform a texture-based 2D convolution with an invalid kernel size of "+e):"x"!=n&&"y"!=n&&p.fatal(`Can't perform a texture-based 1D convolution: invalid axis "${n}"`);const i=`\n    const vec4 magic = vec4(1.0f, 1.0f, 1.0f / 256.0f, 1.0f / 65536.0f);\n    uniform sampler2D image, texKernel;\n    uniform float scale, offset;\n\n    void main()\n    {\n        vec4 kernel = vec4(0.0f, 0.0f, 0.0f, 0.0f);\n        vec4 result = vec4(0.0f, 0.0f, 0.0f, 0.0f);\n        float alpha = threadPixel(image).a;\n        float value = 0.0f;\n\n        ${c=e=>"x"==n?`\n        kernel = pixelAt(texKernel, ivec2(${e+t}, 0));\n        value = dot(kernel, magic) * scale + offset;\n        result += pixelAtOffset(image, ivec2(${e}, 0)) * value;\n    `:`\n        kernel = pixelAt(texKernel, ivec2(${e+t}, 0));\n        value = dot(kernel, magic) * scale + offset;\n        result += pixelAtOffset(image, ivec2(0, ${e})) * value;\n    `,b(t).map(c).join("\n")}\n\n        result = clamp(result, 0.0f, 1.0f);\n        color = vec4(result.rgb, alpha);\n    }\n    `;var c;return(e,n,t,c)=>i}const E=(e,n)=>t(6),C=(e,n)=>t(7),z=(e,n)=>t(8),R=(e,n)=>t(9),D=(e,n)=>t(10),P=(e,n)=>t(11),F=e=>t(12),I=(e,n,i,c,s,l,r)=>t(13);const U=(e,n,i)=>t(14),B=(e,n,i,c)=>t(15);class L{constructor(e,n,t=1,i=0,c=null){this._x=+e,this._y=+n,this._scale=+t,this._rotation=+i,this._descriptor=c}toString(){return`(${this._x},${this._y})`}get x(){return this._x}get y(){return this._y}get scale(){return this._scale}get rotation(){return this._rotation}get descriptor(){return this._descriptor}}class ${constructor(e=32,n=5){this._bucketSize=1<<Math.ceil(Math.log2(e)),this._windowSize=n+(1-n%2),e<this._windowSize&&p.fatal("Invalid bucketSize of "+e),this._head=this._bucketSize-1,this._rawData=new Float32Array(this._bucketSize).fill(0),this._smoothedData=new Float32Array(this._bucketSize).fill(0),this._average=0,this._isSmooth=!0}put(e){this._head=this._head+1&this._bucketSize-1,this._rawData[this._head]=e,this._isSmooth=!1}get size(){return this._bucketSize}get average(){return this._isSmooth||this._smooth(),this._average}fill(e){return this._rawData.fill(e),this._smoothedData.fill(e),this._average=e,this._isSmooth=!0,this._head=this._bucketSize-1,this}_smooth(){this._average=0;for(let e=0;e<this._bucketSize;e++)this._smoothedData[e]=this._median(this._window(e)),this._average+=this._smoothedData[e];this._average/=this._bucketSize,this._isSmooth=!0}_window(e){const n=this._rawData,t=this._win||(this._win=new Float32Array(this._windowSize)),i=n.length,c=t.length>>1,s=this._head,l=s+1&i-1;for(let r=0,a=-c;a<=c;a++){let c=e+a;e<=s?c>s&&(c=s+(s-c)):c<l&&(c=l+(l-c)),c<0?c+=i:c>=i&&(c-=i),t[r++]=n[c]}return t}_median(e){switch(e.length){case 1:return e[0];case 3:return e[0]>e[1]&&([e[0],e[1]]=[e[1],e[0]]),e[1]>e[2]&&([e[1],e[2]]=[e[2],e[1]]),e[0]>e[1]&&([e[0],e[1]]=[e[1],e[0]]),e[1];case 5:return e[0]>e[1]&&([e[0],e[1]]=[e[1],e[0]]),e[3]>e[4]&&([e[3],e[4]]=[e[4],e[3]]),e[0]>e[3]&&([e[0],e[3]]=[e[3],e[0]]),e[1]>e[4]&&([e[1],e[4]]=[e[4],e[1]]),e[1]>e[2]&&([e[1],e[2]]=[e[2],e[1]]),e[2]>e[3]&&([e[2],e[3]]=[e[3],e[2]]),e[1]>e[2]&&([e[1],e[2]]=[e[2],e[1]]),e[2];case 7:return e[0]>e[5]&&([e[0],e[5]]=[e[5],e[0]]),e[0]>e[3]&&([e[0],e[3]]=[e[3],e[0]]),e[1]>e[6]&&([e[1],e[6]]=[e[6],e[1]]),e[2]>e[4]&&([e[2],e[4]]=[e[4],e[2]]),e[0]>e[1]&&([e[0],e[1]]=[e[1],e[0]]),e[3]>e[5]&&([e[3],e[5]]=[e[5],e[3]]),e[2]>e[6]&&([e[2],e[6]]=[e[6],e[2]]),e[2]>e[3]&&([e[2],e[3]]=[e[3],e[2]]),e[3]>e[6]&&([e[3],e[6]]=[e[6],e[3]]),e[4]>e[5]&&([e[4],e[5]]=[e[5],e[4]]),e[1]>e[4]&&([e[1],e[4]]=[e[4],e[1]]),e[1]>e[3]&&([e[1],e[3]]=[e[3],e[1]]),e[3]>e[4]&&([e[3],e[4]]=[e[4],e[3]]),e[3];default:return e.sort((e,n)=>e-n),(e[e.length-1>>1]+e[e.length>>1])/2}}}class K{constructor(e,n,t){n>=t&&p.fatal(`Invalid boundaries [${n},${t}] given to the Tuner`),e=Math.max(n,Math.min(e,t)),this._state=e,this._prevState=e,this._prevPrevState=e,this._initialState=e,this._minState=n,this._maxState=t,this._bucket=new Array(t-n+1).fill(null).map(e=>new $(this._bucketSetup().size,this._bucketSetup().window)),this._iterations=0,this._epoch=0}currentValue(){return this._state}feedObservation(e){const n=this._bucketOf(this._state);if(n.put(+e),++this._iterations>=n.size){0==this._epoch&&(this._bucket.forEach(e=>e.fill(n.average)),isFinite(this._costOfBestState)||(this._costOfBestState=n.average));const e=e=>Math.max(this._minState,Math.min(0|e,this._maxState)),t=this._prevState,i=this._state;this._state=e(this._nextState()),this._prevState=i,this._prevPrevState=t,this._iterations=0,this._epoch++}}reset(){this._state=this._initialState,this._prevState=this._initialState,this._prevPrevState=this._initialState,this._iterations=0,this._epoch=0}finished(){return!1}_bucketOf(e){return e=Math.max(this._minState,Math.min(0|e,this._maxState)),this._bucket[e-this._minState]}_bucketSetup(){return{size:32,window:5}}_nextState(){return this._state}info(){const e=this._bucketOf(this._state),n=this._bucketOf(this._prevState);return{now:this._state,avg:e.average,itr:[this._iterations,this._epoch],bkt:e._smoothedData,cur:new Array(e.size).fill(0).map((n,t)=>t==e._head?1:0),prv:[this._prevState,n.average],fim:this.finished()}}}class X extends K{constructor(e,n,t,i=.5,c=8,s=100,l=null){super(e,n,t),this._bestState=this._initialState,this._costOfBestState=1/0,this._initialTemperature=Math.max(0,s),this._temperature=this._initialTemperature,this._numIterations=0,this._maxIterationsPerTemperature=Math.max(1,c),this._alpha=Math.max(0,Math.min(i,1)),l||(l=e=>this._minState+Math.floor(Math.random()*(this._maxState-this._minState+1))),this._pickNeighbor=l}reset(){this._temperature=this._initialTemperature,this._numIterations=0}finished(){return this._temperature<=1e-5}_nextState(){if(this.finished())return this._bestState;const e=e=>this._bucketOf(e).average;let n=this._state,t=0|this._pickNeighbor(this._state,e(this._state));return t=Math.max(this._minState,Math.min(t,this._maxState)),(e(t)<e(this._state)||Math.random()<Math.exp((e(this._state)-e(t))/this._temperature))&&(n=t),e(n)<this._costOfBestState&&(this._bestState=n,this._costOfBestState=e(n)),++this._numIterations>=this._maxIterationsPerTemperature&&(this._temperature*=this._alpha,this._numIterations=0),n}_bucketSetup(){return{size:4,window:3}}info(){return{best:[this._bestState,this._costOfBestState],state:[this._state,this._bucketOf(this._state).average],iterations:[this._numIterations,this._maxIterationsPerTemperature],temperature:this._temperature,alpha:this._alpha,cool:this.finished()}}}class N extends K{constructor(e,n,t=.1,i=.05){super(Math.round(p.gaussianNoise((e+n)/2,5)),e,n),this._tolerance=Math.max(0,t),this._bestState=this._initialState,this._expected=null,this._learningRate=Math.max(0,i)}reset(){super.reset(),this._expected=null}feedObservation(e,n){const t=+e,i=+n;i!==this._expected&&this.reset(),this._expected=i;const c=(t-i)*(t-i)/(i*i);super.feedObservation(c)}finished(){return(e=>Math.sqrt(this._bucketOf(e).average)*Math.abs(this._expected))(this._bestState)<=this._tolerance*this._expected}get tolerance(){return this._tolerance}set tolerance(e){this._tolerance=Math.max(0,e)}_nextState(){if(this.finished())return this._bestState;const e=e=>Math.sqrt(this._bucketOf(e).average)*Math.abs(this._expected);e(this._state)<e(this._bestState)&&(this._bestState=this._state);const n=Math.abs(this._maxState),t=this._learningRate*(e=>Math.sqrt(this._bucketOf(e).average)*n)(this._state),i=e=>(e>=0)-(e<0),c=i(e(this._state)-e(this._prevState))*-i(this._state-this._prevState)*i(Math.random()-.15),s=p.gaussianNoise(1,.1);let l=Math.round(this._state+c*s*t);return(l>this._maxState||l<this._minState)&&(l=this._bestState),l}_bucketSetup(){return{size:4,window:3}}info(){return{now:[this._state,this._prevState],bkt:this._bucketOf(this._state)._rawData,cur:this._bucketOf(this._state)._head,err:[this._bucketOf(this._state).average,this._bucketOf(this._prevState).average],sqt:Math.sqrt(this._bucketOf(this._state).average),done:this.finished()}}}const G=2*Math.PI;const j=e=>t(16),Y=e=>t(17),H=e=>t(18),q=e=>t(19),W=(e,n)=>t(20),V=(e,n)=>t(21),Q=(e,n)=>t(22),Z=e=>t(23);function J(e,n,t){const i=Math.log2(t),c=Math.max(1e-5,e),s=-Math.log2(c)/(i+n);return e=>`\n    uniform sampler2D image;\n\n    void main()\n    {\n        vec4 pixel = threadPixel(image);\n        float alpha = clamp(pixel.a + float(${s}), 0.0f, 1.0f);\n\n        color = vec4(pixel.rgb, alpha);\n    }\n    `}const ee={utils:class extends d{constructor(e,n,t){super(e,n,t),this.declare("identity",g).declare("output",x,this.operation.displaysGraphics())}},colors:class extends d{constructor(e,n,t){super(e,n,t),this.declare("rgb2grey",u)}},filters:class extends d{constructor(e,n,t){super(e,n,t),this.compose("gauss5","_gauss5x","_gauss5y").compose("gauss3","_gauss3x","_gauss3y").compose("gauss7","_gauss7x","_gauss7y").compose("box5","_box5x","_box5y").compose("box3","_box3x","_box3y").compose("box7","_box7x","_box7y").compose("box9","_box9x","_box9y").compose("box11","_box11x","_box11y").compose("texConv2D3","_idConv2D3","_texConv2D3").compose("texConv2D5","_idConv2D5","_texConv2D5").compose("texConv2D7","_idConv2D7","_texConv2D7").declare("_texConv2D3",T(3)).declare("_idConv2D3",(e,n,t,i)=>"\n    uniform sampler2D image, texKernel;\n    uniform float scale, offset;\n\n    void main()\n    {\n        color = threadPixel(image);\n    }\n    ").declare("_texConv2D5",T(5)).declare("_idConv2D5",(e,n,t,i)=>"\n    uniform sampler2D image, texKernel;\n    uniform float scale, offset;\n\n    void main()\n    {\n        color = threadPixel(image);\n    }\n    ").declare("_texConv2D7",T(7)).declare("_idConv2D7",(e,n,t,i)=>"\n    uniform sampler2D image, texKernel;\n    uniform float scale, offset;\n\n    void main()\n    {\n        color = threadPixel(image);\n    }\n    ").compose("texConvXY3","texConvX3","texConvY3").declare("texConvX3",k(3)).declare("texConvY3",O(3)).compose("texConvXY5","texConvX5","texConvY5").declare("texConvX5",k(5)).declare("texConvY5",O(5)).compose("texConvXY7","texConvX7","texConvY7").declare("texConvX7",k(7)).declare("texConvY7",O(7)).compose("texConvXY9","texConvX9","texConvY9").declare("texConvX9",k(9)).declare("texConvY9",O(9)).compose("texConvXY11","texConvX11","texConvY11").declare("texConvX11",k(11)).declare("texConvY11",O(11)).declare("createKernel3x3",A(3),{...this.operation.hasTextureSize(3,3),...this.operation.doesNotRecycleTextures()}).declare("createKernel5x5",A(5),{...this.operation.hasTextureSize(5,5),...this.operation.doesNotRecycleTextures()}).declare("createKernel7x7",A(7),{...this.operation.hasTextureSize(7,7),...this.operation.doesNotRecycleTextures()}).declare("createKernel3x1",S(3),{...this.operation.hasTextureSize(3,1),...this.operation.doesNotRecycleTextures()}).declare("createKernel5x1",S(5),{...this.operation.hasTextureSize(5,1),...this.operation.doesNotRecycleTextures()}).declare("createKernel7x1",S(7),{...this.operation.hasTextureSize(7,1),...this.operation.doesNotRecycleTextures()}).declare("createKernel9x1",S(9),{...this.operation.hasTextureSize(9,1),...this.operation.doesNotRecycleTextures()}).declare("createKernel11x1",S(11),{...this.operation.hasTextureSize(11,1),...this.operation.doesNotRecycleTextures()}).declare("_gauss5x",v([.05,.25,.4,.25,.05])).declare("_gauss5y",y([.05,.25,.4,.25,.05])).declare("_gauss3x",v([.25,.5,.25])).declare("_gauss3y",y([.25,.5,.25])).declare("_gauss7x",v([.00598,.060626,.241843,.383103,.241843,.060626,.00598])).declare("_gauss7y",y([.00598,.060626,.241843,.383103,.241843,.060626,.00598])).declare("_box3x",v([1,1,1],1/3)).declare("_box3y",y([1,1,1],1/3)).declare("_box5x",v([1,1,1,1,1],.2)).declare("_box5y",y([1,1,1,1,1],.2)).declare("_box7x",v([1,1,1,1,1,1,1],1/7)).declare("_box7y",y([1,1,1,1,1,1,1],1/7)).declare("_box9x",v([1,1,1,1,1,1,1,1,1],1/9)).declare("_box9y",y([1,1,1,1,1,1,1,1,1],1/9)).declare("_box11x",v([1,1,1,1,1,1,1,1,1,1,1],1/11)).declare("_box11y",y([1,1,1,1,1,1,1,1,1,1,1],1/11))}},keypoints:class extends d{constructor(e,n,t){super(e,n,t),this.compose("fast9","_fast9","_fastScore16").declare("_fast9",E).declare("_fastScore16",R).compose("fast7","_fast7","_fastScore12").declare("_fast7",C).declare("_fastScore12",D).compose("fast5","_fast5","_fastScore8").declare("_fast5",z).declare("_fastScore8",P).declare("fastSuppression",F).declare("brisk",I)}},encoders:class extends d{constructor(e,n,t){super(e,n,t),this.declare("_encodeKeypointOffsets",U).declare("_encodeKeypoints",B,{output:[128,128],renderToTexture:!1});this._tuner=new X(48,32,255,.2,4,60,e=>Math.round(p.gaussianNoise(e,64))%256),this._keypointEncoderLength=128,this._descriptorSize=0,this._spawnedAt=performance.now()}optimizeKeypointEncoder(e){const n=Math.max(0,Math.min(e,5e3)),t=Math.ceil(2+this._descriptorSize/4),i=Math.ceil(Math.sqrt((4+n)*t)),c=Math.max(1,Math.min(i,300)),s=this._keypointEncoderLength;return c!=s&&(this._keypointEncoderLength=c,this._encodeKeypoints.resize(c,c)),c-s}encodeKeypoints(e){const n=this._keypointEncoderLength,t=this._descriptorSize,i=[this._width,this._height],c=this._tuner.currentValue(),s=performance.now(),l=this._encodeKeypointOffsets(e,i,c);this._encodeKeypoints(l,i,n,t);const r=this._encodeKeypoints.readPixelsSync();if(performance.now()>=this._spawnedAt+2e3){const e=performance.now()-s;this._tuner.feedObservation(e)}return r}decodeKeypoints(e){const[n,t]=[this._width,this._height],i=this._descriptorSize>0,c=2+this._descriptorSize/4,s=Math.log2(this._gpu.pyramidMaxScale),l=this._gpu.pyramidHeight;let r,a,f,o,p=[];for(let h=0;h<e.length&&(r=e[h+1]<<8|e[h],a=e[h+3]<<8|e[h+2],r<n&&a<t);h+=4*c)f=255==e[h+4]?1:Math.pow(2,-s+(s+l)*e[h+4]/255),o=i?e[h+5]*G/255:0,p.push(new L(r,a,f,o));return 0==p.length&&this._tuner.finished()&&this._tuner.reset(),p}},pyramids:class extends d{constructor(e,n,t){super(e,n,t),this.declare("setBase",function(e,n,t){const i=Math.log2(t),c=Math.pow(2,-n)+1e-5,s=Math.max(c,Math.min(e,t)),l=(i-Math.log2(s))/(i+n);return e=>`\n    uniform sampler2D image;\n\n    void main()\n    {\n        color = vec4(threadPixel(image).rgb, float(${l}));\n    }\n    `}(1,e.pyramidHeight,e.pyramidMaxScale)).compose("reduce","_smoothX","_smoothY","_downsample2","_scale1/2").compose("expand","_upsample2","_smoothX2","_smoothY2","_scale2").compose("intraReduce","_upsample2","_smoothX2","_smoothY2","_downsample3/2","_scale2/3").compose("intraExpand","_upsample3","_smoothX3","_smoothY3","_downsample2/3","_scale3/2").declare("mergeKeypoints",W).declare("mergeKeypointsAtConsecutiveLevels",V).declare("normalizeKeypoints",Q).declare("crop",Z).declare("output",x,{...this.operation.hasTextureSize(this._width,this._height),...this.operation.displaysGraphics()}).declare("output2",x,{...this.operation.hasTextureSize(2*this._width,2*this._height),...this.operation.displaysGraphics()}).declare("output3",x,{...this.operation.hasTextureSize(3*this._width,3*this._height),...this.operation.displaysGraphics()}).declare("_smoothX",v([.05,.25,.4,.25,.05])).declare("_smoothY",y([.05,.25,.4,.25,.05])).declare("_smoothX2",v([.1,.5,.8,.5,.1]),this.operation.hasTextureSize(2*this._width,2*this._height)).declare("_smoothY2",y([.1,.5,.8,.5,.1],.5),this.operation.hasTextureSize(2*this._width,2*this._height)).declare("_smoothX3",v([.2,.8,1,.8,.2]),this.operation.hasTextureSize(3*this._width,3*this._height)).declare("_smoothY3",y([.2,.8,1,.8,.2],1/3),this.operation.hasTextureSize(3*this._width,3*this._height)).declare("_upsample2",j,this.operation.hasTextureSize(2*this._width,2*this._height)).declare("_downsample2",Y,this.operation.hasTextureSize((1+this._width)/2,(1+this._height)/2)).declare("_upsample3",H,this.operation.hasTextureSize(3*this._width,3*this._height)).declare("_downsample3",q,this.operation.hasTextureSize((2+this._width)/3,(2+this._height)/3)).declare("_downsample2/3",Y,this.operation.hasTextureSize(3*this._width/2,3*this._height/2)).declare("_downsample3/2",q,this.operation.hasTextureSize(2*this._width/3,2*this._height/3)).declare("_scale2",J(2,e.pyramidHeight,e.pyramidMaxScale),this.operation.hasTextureSize(2*this._width,2*this._height)).declare("_scale1/2",J(.5,e.pyramidHeight,e.pyramidMaxScale),this.operation.hasTextureSize((1+this._width)/2,(1+this._height)/2)).declare("_scale3/2",J(1.5,e.pyramidHeight,e.pyramidMaxScale),this.operation.hasTextureSize(3*this._width/2,3*this._height/2)).declare("_scale2/3",J(2/3,e.pyramidHeight,e.pyramidMaxScale),this.operation.hasTextureSize(2*this._width/3,2*this._height/3))}}};class ne{constructor(e,n){this._width=Math.max(1,0|e),this._height=Math.max(1,0|n),(this._width>65534||this._height>65534)&&(p.warning(`Maximum texture size exceeded (using ${this._width} x ${this._height}).`),this._width=Math.min(this._width,65534),this._height=Math.min(this._height,65534)),this._core=this._spawnGPUCore(this._width,this._height)}get width(){return this._width}get height(){return this._height}get core(){return this._core}pyramid(e){const n=0|e;return(n<0||n>=4)&&p.fatal("Invalid pyramid level: "+n),this._pyramid[n]}intraPyramid(e){const n=0|e;return(n<0||n>=5)&&p.fatal("Invalid intra-pyramid level: "+n),this._intraPyramid[n]}get pyramidHeight(){return 4}get pyramidMaxScale(){return 2}get canvas(){return this._core.canvas}_spawnGPUCore(e,n){const t=new h(e,n);return te.call(this,this,e,n),this._pyramid=this._buildPyramid(t,e,n,1,4),this._intraPyramid=this._buildPyramid(t,e,n,1.5,5),t}_buildPyramid(e,n,t,i,c){let s=+i,l=n*s|0,r=t*s|0,a=new Array(c);for(let e=0;e<a.length;e++)a[e]={width:l,height:r,scale:s},te.call(a[e],this,l,r),l=(1+l)/2|0,r=(1+r)/2|0,s/=2;return a}}function te(e,n,t){for(let i in ee)Object.defineProperty(this,i,{get:(()=>{const c="_"+i;return function(){return this[c]||(this[c]=new ee[i](e,n,t))}.bind(this)})(),configurable:!0})}const ie=p.enum("Image","Video","Canvas","Texture"),ce=p.enum("RGB","Greyscale","Binary");class se{static run(e,n,t,i){p.assert(9==e||7==e||5==e,"Not implemented: FAST-"+e);const c={5:()=>n.keypoints.fast5(t,i.threshold),7:()=>n.keypoints.fast7(t,i.threshold),9:()=>n.keypoints.fast9(t,i.threshold)}[e]();return n.keypoints.fastSuppression(c)}static sensitivity2threshold(e){return e=Math.max(0,Math.min(e,1)),1-Math.tanh(2.77*e)}static normalizedThreshold(e){return(e=Math.max(0,Math.min(e,255)))/255}}let le=null,re=null;function ae(e){const{n:n,r:t,l:i}=e,c=2*Math.PI;return[...Array(n).keys()].map(e=>({x:i*Math.cos(c*e/n),y:i*Math.sin(c*e/n),r:t,l:i,j:e,n:n}))}function fe(e,n=1){const t=function(e=1){const n=Math.PI/2,t=Math.sin(n/10),i=Math.sin(n/14),c=Math.sin(n/15),s=Math.sin(n/20),l=4.21*e,r=2*l*t,a=2*(l+r)*i/(1-2*i),f=l+r+a,o=2*(f+a)*c/(1-2*c),p=f+a+o,h=2*(p+o)*s/(1-2*s);return[{n:1,r:.8*r,l:0},{n:10,r:r,l:l},{n:14,r:a,l:f},{n:15,r:o,l:p},{n:20,r:h,l:p+o+h}]}(n).map(ae).reduce((e,n)=>e.concat(n),[]);const i=t.length,c=+e*n,s=(e,n)=>(e.x-n.x)*(e.x-n.x)+(e.y-n.y)*(e.y-n.y),l=c<0?(e,n)=>s(e,n)<c*c:(e,n)=>s(e,n)>c*c,r=[];for(let e=1;e<i;e++)for(let n=0;n<e;n++)l(t[e],t[n])&&(r.push(t[e].x),r.push(t[e].y),r.push(t[n].x),r.push(t[n].y));return new Float32Array(r)}class oe{constructor(e){this._gpu=e,this._lastKeypointCount=0,this._sensitivityTuner=null}fast(e,n=9,t={}){const i=this._gpu;(t={threshold:10,denoise:!0,...t}).hasOwnProperty("expected")&&(t.sensitivity=this._findSensitivity(t.expected)),t.hasOwnProperty("sensitivity")?t.threshold=se.sensitivity2threshold(t.sensitivity):t.threshold=se.normalizedThreshold(t.threshold);const c=e._gpu.core.upload(e.source),s=t.denoise?i.filters.gauss5(c):c,l=i.colors.rgb2grey(s),r=se.run(n,i,l,t);return this._extractKeypoints(r)}brisk(e,n={}){const t=this._gpu;(n={threshold:10,denoise:!0,depth:4,...n}).hasOwnProperty("expected")&&(n.sensitivity=this._findSensitivity(n.expected)),n.hasOwnProperty("sensitivity")?n.threshold=se.sensitivity2threshold(n.sensitivity):n.threshold=se.normalizedThreshold(n.threshold);const i=e._gpu.core.upload(e.source),c=n.denoise?t.filters.gauss5(i):i,s=t.colors.rgb2grey(c),l=class{static run(e,n,t){const i=e.pyramidHeight;t.depth=0|Math.max(1,Math.min(t.depth,i));const c=new Array(t.depth),s=new Array(c.length+1);c[0]=e.pyramid(0).pyramids.setBase(n);for(let n=1;n<c.length;n++)c[n]=e.pyramid(n-1).pyramids.reduce(c[n-1]);s[0]=e.pyramid(0).pyramids.intraExpand(c[0]);for(let n=1;n<s.length;n++)s[n]=e.intraPyramid(n-1).pyramids.reduce(s[n-1]);const l=new Array(c.length),r=new Array(s.length);for(let n=0;n<l.length;n++)l[n]=e.pyramid(n).keypoints.fast9(c[n],t.threshold),l[n]=e.pyramid(n).keypoints.fastSuppression(l[n]);for(let n=0;n<r.length;n++)r[n]=e.intraPyramid(n).keypoints.fast9(s[n],t.threshold),r[n]=e.intraPyramid(n).keypoints.fastSuppression(r[n]);const a=Math.log2(e.pyramidMaxScale),f=e.pyramidHeight,o=new Array(l.length),p=new Array(r.length);p[0]=e.intraPyramid(0).keypoints.brisk(r[0],r[0],l[0],1,2/3,a,f);for(let n=0;n<o.length;n++)o[n]=e.pyramid(n).keypoints.brisk(l[n],r[n],r[n+1],1.5,.75,a,f),n+1<o.length?p[n+1]=e.intraPyramid(n+1).keypoints.brisk(r[n+1],l[n],l[n+1],4/3,2/3,a,f):p[n+1]=e.intraPyramid(n+1).keypoints.brisk(r[n+1],l[n],r[n+1],4/3,1,a,f);for(let n=o.length-2;n>=0;n--)o[n]=e.pyramid(n).pyramids.mergeKeypointsAtConsecutiveLevels(o[n],o[n+1]);for(let n=p.length-2;n>=0;n--)p[n]=e.intraPyramid(n).pyramids.mergeKeypointsAtConsecutiveLevels(p[n],p[n+1]);return p[0]=e.intraPyramid(0).pyramids.normalizeKeypoints(p[0],1.5),p[0]=e.pyramid(0).pyramids.crop(p[0]),e.pyramid(0).pyramids.mergeKeypoints(o[0],p[0])}static get shortDistancePairs(){return le||(le=function(e=9.75,n=1){return fe(-e,n)}())}static get longDistancePairs(){return re||(re=function(e=13.67,n=1){return fe(e,n)}())}}.run(t,s,n);return this._extractKeypoints(l)}_extractKeypoints(e,n=this._gpu){const t=n.encoders.encodeKeypoints(e),i=n.encoders.decodeKeypoints(t),c=this._lastKeypointCount>0?Math.max(1,Math.min(i.length/this._lastKeypointCount),2):1;return n.encoders.optimizeKeypointEncoder(i.length*c),this._lastKeypointCount=i.length,i}_findSensitivity(e){const n={number:0,tolerance:.1,..."object"==typeof e?e:{number:0|e}};this._sensitivityTuner=this._sensitivityTuner||new N(0,1200);this._sensitivityTuner.tolerance=n.tolerance,this._sensitivityTuner.feedObservation(this._lastKeypointCount,n.number);const t=.001*this._sensitivityTuner.currentValue();return Math.max(0,Math.min(t,1))}}class pe{constructor(e,n,t){if(arguments.length>1)this._source=e,this._width=0|n,this._height=0|t,this._type=function(e){if(e&&e.constructor)switch(e.constructor.name){case"HTMLImageElement":return ie.Image;case"HTMLVideoElement":return ie.Video;case"HTMLCanvasElement":return ie.Canvas;default:return ie.Texture}return p.fatal("Can't get media type: invalid media source. "+e),null}(this._source),this._colorFormat=ce.RGB,this._gpu=new ne(this._width,this._height),this._featureDetector=null;else if(1==arguments.length){const e=arguments[0];this._source=e._source,this._width=e._width,this._height=e._height,this._type=e._type,this._colorFormat=e._colorFormat,this._gpu=e._gpu,this._featureDetector=e._featureDetector}else p.fatal("Invalid instantiation of SpeedyMedia")}static load(e){return new Promise((n,t)=>{const i=he(e);null!=i?function i(c,s=500){if(c.width>0&&c.height>0){const t=new pe(e,c.width,c.height);p.log(`Loaded SpeedyMedia with a ${e}.`),n(t)}else s>0?setTimeout(()=>i(he(e),s-1),10):t(new o(`Can't load SpeedyMedia with a ${e}: timeout.`))}(i):t(new o(`Can't load SpeedyMedia with a ${e}: invalid media source.`))})}static loadCameraStream(e=426,n=240,t={}){return function(e,n,t={}){return new Promise((i,c)=>{if(p.log("Accessing the webcam..."),!navigator.mediaDevices||!navigator.mediaDevices.getUserMedia)return c(new o("Unsupported browser: no mediaDevices.getUserMedia()"));navigator.mediaDevices.getUserMedia({audio:!1,video:{width:{ideal:e},height:{ideal:n},aspectRatio:{ideal:e/n},facingMode:"environment"},...t}).then(e=>{const n=document.createElement("video");n.srcObject=e,n.onloadedmetadata=t=>{n.play(),p.log("The camera device is turned on!"),i(n,e)}}).catch(e=>{c(new o(`Please give access to the camera and reload the page.\n${e.name}. ${e.message}.`))})})}(e,n,t).then(e=>pe.load(function(e){const n=document.createElement("canvas"),t=n.getContext("2d");function i(){t.drawImage(e,0,0),requestAnimationFrame(i)}return n.width=e.videoWidth,n.height=e.videoHeight,i(),n}(e)))}get source(){return this._source}get width(){return this._width}get height(){return this._height}get type(){switch(this._type){case ie.Image:return"image";case ie.Video:return"video";case ie.Canvas:return"canvas";case ie.Texture:return"internal";default:return"unknown"}}clone(e={}){return(e={lightweight:!1,...e}).lightweight?new pe(this):new pe(this._source,this._width,this._height)}run(e){const n=this.clone({lightweight:!0});return n._type=ie.Texture,e._run(n)}draw(e,n=0,t=0,i=this.width,c=this.height){const s=e.getContext("2d");switch(n=+n,t=+t,i=Math.max(i,0),c=Math.max(c,0),this._type){case ie.Image:case ie.Video:case ie.Canvas:s.drawImage(this._source,n,t,i,c);break;case ie.Texture:s.drawImage(this._gpu.canvas,n,t,i,c)}}findFeatures(e={}){e=Object.assign({method:"fast"},e),this._featureDetector=this._featureDetector||new oe(this._gpu);const n={fast:(e,n)=>this._featureDetector.fast(e,9,n),fast9:(e,n)=>this._featureDetector.fast(e,9,n),fast7:(e,n)=>this._featureDetector.fast(e,7,n),fast5:(e,n)=>this._featureDetector.fast(e,5,n),brisk:(e,n)=>this._featureDetector.brisk(e,n)};return new Promise((t,i)=>{const c=String(e.method).toLowerCase();if(n.hasOwnProperty(c)){t(n[c](this,e))}else i(new o(`Invalid method "${c}" for keypoint detection.`))})}}function he(e){if(e&&e.constructor&&e.constructor.name){const n=e.constructor.name,t={HTMLImageElement:{width:"naturalWidth",height:"naturalHeight"},HTMLVideoElement:{width:"videoWidth",height:"videoHeight"},HTMLCanvasElement:{width:"width",height:"height"}};if(t.hasOwnProperty(n))return{width:e[t[n].width],height:e[t[n].height]}}return null}const _e={};class de{run(e,n,t){return e}release(){}}_e.ConvertToGreyscale=class extends de{run(e,n,t){return t._colorFormat==ce.RGB?e=n.colors.rgb2grey(e):t._colorFormat!=ce.Greyscale&&p.fatal("Can't convert image to greyscale: unknown color format"),t._colorFormat=ce.Greyscale,e}},_e.Blur=class extends de{constructor(e={}){const{filter:n,size:t}=e={filter:"gaussian",size:5,...e};super(),3!=t&&5!=t&&7!=t&&p.fatal("Invalid kernel size: "+t),"gaussian"==n?this._filter="gauss"+t:"box"==n?this._filter="box"+t:p.fatal(`Invalid filter: "${n}"`)}run(e,n,t){return n.filters[this._filter](e)}},_e.Convolve=class extends de{constructor(e,n=1){let t=new Float32Array(e).map(e=>e/n);const i=t.length,c=0|Math.sqrt(i),s={3:["createKernel3x3","texConv2D3"],5:["createKernel5x5","texConv2D5"],7:["createKernel7x7","texConv2D7"]}[c]||null;super(),1==i?p.fatal("Cannot convolve with a kernel containing a single element"):c*c==i&&s||p.fatal(`Cannot convolve with a non-square kernel of ${i} elements`);const l=Math.min(...t),r=Math.max(...t),a=l,f=Math.abs(r-l)>1e-5?r-l:1;t=t.map(e=>(e-a)/f),this._method=s,this._scale=f,this._offset=a,this._kernel=t,this._kernelSize=c,this._texKernel=null,this._gl=null}run(e,n,t){return null==this._texKernel&&(this._texKernel=n.filters[this._method[0]](this._kernel),this._gl=n.core.gl),n.filters[this._method[1]](e,this._texKernel,this._scale,this._offset)}release(){null!=this._texKernel&&(c.destroyTexture(this._gl,this._texKernel),this._texKernel=this._gl=null),super.release()}};class ge{constructor(){this._operations=[]}get length(){return this._operations.length}release(){return new Promise((e,n)=>{for(let e=this._operations.length-1;e>=0;e--)this._operations[e].release();this._operations.length=0,e(this)})}_spawn(e){return this._operations.push(e),this}_run(e){return new Promise((n,t)=>{if(e._type==ie.Texture){let t=e._gpu.core.upload(e._source);for(let n=0;n<this._operations.length;n++)t=this._operations[n].run(t,e._gpu,e);e._gpu.utils.output(t),e._source=e._gpu.canvas,n(e)}else t(new o("Can't run a pipeline on a media that is not a texture"))})}concat(e){return e instanceof ge?(this._operations=this._operations.concat(e._operations),this):(p.fatal(`Invalid argument "${e}" given to SpeedyPipeline.concatenate()`),this)}convertTo(e=null){return"greyscale"==e||"grayscale"==e?this._spawn(new _e.ConvertToGreyscale):(p.fatal(`Can't convert to unknown color space: "${e}"`),this)}blur(e={}){return this._spawn(new _e.Blur(e))}convolve(e,n=1){return this._spawn(new _e.Convolve(e,n))}}let xe=null;class ue{constructor(){this._fps=60,this._frames=0,this._updateInterval=500,this._lastUpdate=performance.now(),null!==xe&&p.fatal("Can't have multiple instances of FPSCounter"),requestAnimationFrame(this._update.bind(this))}static get instance(){return null===xe&&(xe=new ue),xe}get fps(){return this._fps}_update(){const e=performance.now(),n=e-this._lastUpdate;n>=this._updateInterval&&(this._fps=Math.round(this._frames/(.001*n)),this._frames=0,this._lastUpdate=e),this._frames++,requestAnimationFrame(this._update.bind(this))}}class me{static load(e){return pe.load(e)}static camera(e=426,n=240,t={}){return pe.loadCameraStream(e,n,t)}static pipeline(){return new ge}static get version(){return"0.3.0"}static get fps(){return{get value(){return ue.instance.fps}}}}const be=me.load,ve=me.camera,ye=me.pipeline,we=me.version,Ae=me.fps}]);